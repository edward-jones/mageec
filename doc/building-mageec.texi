\input texinfo
@setfilename building-mageec.info
@afourpaper
@settitle Building MAGEEC
@paragraphindent 0

@copying
This manual is for MAGEEC.

Copyright @copyright{} 2013-2015 Embecosm Limited and University of Bristol.
@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts. A copy of the license is included in the section entitled
``GNU Free Documentation License''.
@end quotation
@end copying

@titlepage
@title Building MAGEEC
@subtitle MAchine Guided Energy Efficient Compilation
@author Simon Cook
@author Edward Jones
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@node Top
@top Scope of this Document
This document describes how to build MAGEEC @emph{MAchine Guided Energy
Efficient Compilation}.

@menu
* Building MAGEEC::
* GNU Free Documentation License::
@end menu

@node Building MAGEEC
@chapter Building MAGEEC

@section Prerequesites

There are several components which are built and installed
as part of MAGEEC; the MAGEEC core library, GCC feature extractor
plugin, GCC driver wrapper, C5.0 and 1NN machine learners,
documentation and scripts. These components have a number
of prerequuesites which are required to build everything in
MAGEEC.

The main dependencies required to build the MAGEEC components
are:

@itemize
@item
CMake - Used as the build system to build MAGEEC. A version >= 3.0.2
is required.

@item
make or ninja - CMake can generate Makefiles or files to build
using the Ninja build system.

@item
GCC/Clang - To build the libraries a version of GCC/Clang supporting
C++11 is required. It may be possible to use other compilers, but
GCC and Clang are the only compilers supported by the build system.

@item
SQLite3 - MAGEEC uses sqlite as a file format, so sqlite is
required along with its development headers.

@item
GCC plugin development headers - These headers are the headers
which define the plugin interface which will be used by the 
MAGEEC GCC feature extractor plugin, and are required when
building the feature extractor. Only versions of GCC >= 4.5.0
have plugin headers available, so the MAGEEC feature extractor
plugin can only be built and used with these GCC versions.

@item
Doxygen - This dependency is optional, and is only required
if API documentation is also being generated. The MAGEEC C++
source code is annotated with Doxygen comments which can be
used to generate source documentation if Doxygen is available.

@item
Texinfo - This dependency is optional and is only needed if
user documentation is desired.

@end itemize

@section Building MAGEEC

At the most basic level, one can build MAGEEC with the following commands
using cmake and make:

@example
cd path/to/mageec
cd ..
mkdir build
mkdir install
cd build
cmake ../mageec -DCMAKE_INSTALL_PREFIX=../install
make
make install
@end example

@subsection Build options

There are some options that can be provided to CMake to configure
the build using the -D flag. These flags can be set with
-D@var{FLAG_NAME}=@var{VALUE}. To enable or disable a boolean flag,
-D@var{FLAG_NAME}=True and -D@var{FLAG_NAME}=False can be used.

@itemize
@item
-DMAGEEC_DEBUG (default: True) - Add debug information, enable
-Wall and enable debug output printing.

@item
-DMAGEEC_WITH_DOC (default: True) - Enabled documentation building
through the 'doc' build target.

@item
-DMAGEEC_WITH_DOXYGEN (default: True) - Enable building of the
doxygen API documentation for the 'doc' build target.

@item
-DMAGEEC_WITH_GCC_FEATURE_EXTRACT_PLUGIN (default: True) - Enable
building of the GCC feature extractor as part of the default build target.

@item
-DMAGEEC_WITH_GCC_DRIVER (default: True) - Enable building of
the GCC wrapper driver as part of the default build target.

@item
-DGCC_PLUGIN_INCLUDE_DIR (default: Undefined) - Directory to search
for the plugin headers for GCC. If not specified then the
build will use the system GCC (if available) to search for
appropriate plugin headers.
@end itemize

@subsection Build targets

As well as various build options, there are also some custom
targets which can be built.

The default build target does not build documentation. Instead,
there are a number of custom targets which can be used to
build the documentation.

@itemize
@item
doc - Builds all of the documentation enabled in the
configure step. This builds info, html and pdf versions of
user documentation as well as doxygen
@item
info - Builds info files for all of the user documentation
@item
html - Builds html documents for all of the user documentation
@item
pdf - Builds pdf documents for all of the user documentation
@item
mageec-doxygen - Build doxygen documentation
@item
building-mageec-info - Builds info version of this
guide to building MAGEEC
@item
building-mageec-html - Builds html version of this
guide to building MAGEEC
@item
building-mageec-pdf - Build pdf version of this
guide to building MAGEEC
@item
mageec-design-info - Builds info version of the
MAGEEC design document
@item
mageec-design-html - Builds html version of the
MAGEEC design document
@item
mageec-design-pdf - Builds pdf version of the
MAGEEC design document
@item
mageec-feature-extractor-info - Builds info version of
the documentation for the GCC feature extractor plugin
@item
mageec-feature-extractor-html - Builds html version of
the documentation for the GCC feature extractor plugin
@item
mageec-feature-extractor-pdf - Builds pdf version of
the documentation for the GCC feature extractor plugin
@item
mageec-gcc-wrapper-info - Builds info version of the
documentation for the GCC driver wrapper
@item
mageec-gcc-wrapper-html - Builds html version of the
documentation for the GCC driver wrapper
@item
mageec-gcc-wrapper-pdf - Builds pdf version of the
documentation for the GCC driver wrapper
@item
mageec-interfaces-info - Builds info version of the
documentation on the MAGEEC API
@item
mageec-interfaces-html - Builds html version of the
documentation on the MAGEEC API
@item
mageec-interfaces-pdf - Builds pdf version of the
documentation on the MAGEEC API
@end itemize

After any of the above targets are build, the 'install'
target will install all built documentation.

@node GNU Free Documentation License
@chapter GNU Free Documentation License
@include fdl-1.3.texi

@bye
