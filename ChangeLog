2014-04-02  James Pallister  <james.pallister@bristol.ac.uk>
	Added missing compile file, added by automake 1.14

	* compile: Added missing compile file, added by automake 1.14

2014-04-02  James Pallister  <james.pallister@bristol.ac.uk>
	Added subdir-objs to automake options

	* configure.ac: Added subdir-objs to automake options
	* gcc_plugin/Makefile.in: Regenerated
	* mageec/Makefile.in: Regenerated
	* ml/C5/Makefile.in: Regenerated
	* ml/Makefile.in: Regenerated
	* testsuite/gcc_plugin.tests/Makefile.in: Regenerated

2014-04-02  Pierre Langlois  <pierre.langlois@embecosm.com>

	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* configure.ac: Add gcc_plugin.tests/Makefile and config/site.exp to
	AC_OUTPUT.
	* testsuite/Makefile.am: Set config/site.exp as a configuration file.
	Add gcc_plugin as a second tool to seperate gcc specific test from
	mageec tests.
	* testsuite/Makefile.in: Regenerate.
	* testsuite/config/site.exp.in: New file. Configuration to pass to the
	tests.
	* testsuite/gcc_plugin.tests/Makefile.am: New file.
	* testsuite/gcc_plugin.tests/Makefile.in: New file, generate.
	* testsuite/gcc_plugin.tests/feature-extract.exp: New test file. Checks
	that features are extracted from compiling an empty source file.
	* testsuite/gcc_plugin.tests/main.c: New empty source file.

2014-04-02  James Pallister  <james.pallister@bristol.ac.uk>
	Added auxiliary m4 files for boost and python detections

	* m4/ax_boost_base.m4: Detection script for boost
	* m4/ax_boost_python.m4: Detection script for boost python
	* m4/ax_python_devel.m4: Detection script for python

2014-04-02  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/feature-extract.cpp (mageec_featextract_exec):
	Correctly store number of statements instead of block count as
	instruction count features.

2014-03-29  James Pallister  <james.pallister@bristol.ac.uk>
	Added support for using the library as a python module

	* Makefile.in: Regenerated
	* aclocal.m4: Regenerated
	* configure: Regenerated
	* configure.ac: Add the --enable-python options, and check for python
	    development headers and boost python
	* doc/Makefile.in: Regenerated
	* gcc_plugin/Makefile.in: Regenerated
	* include/Makefile.in: Regenerated
	* mageec/Makefile.am: Conditionally compile in python.cpp if
	    --enable-python is given to configure. Add install hooks to
	    symlink the library into python dist- packages, so python scripts
	    can use it
	* mageec/Makefile.in: Regenerated
	* mageec/python.cpp: Initial python module file. Support for the
	    hashedelf class only
	* ml/C5/Makefile.in: Regenerated
	* ml/Makefile.in: Regenerated
	* testsuite/Makefile.in: Regenerated
	* testsuite/mageec.tests/Makefile.in: Regenerated

2014-03-20  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-callbacks.cpp (mageec_pass_gate): Add flag to
	only print out MAGEEC's decision if it overrides the compiler.

2014-03-18  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plguin/feature-extract.cpp (mageec_featextract_exec): Add
	feature extractor support for counting switch statements and
	unary ops.

2014-03-18  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-plugin.cpp (mageec_featextract_exec): Add support
	for phi counting features.

2014-03-18  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-plugin.cpp (mageec_featextract_exec): Add support
	for predecessor/successor counting features.

2014-03-07  James Pallister  <james.pallister@embecosm.com>

	* configure.ac: Fixed check for gcc-plugin headers.
	* configure: Regenerated.

2014-03-07  James Pallister  <james.pallister@embecosm.com>

	* configure.ac: Added check for gcc-plugin headers.
	* configure: Regenerated.

2014-03-04  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-plguin.cpp (parse_arguments): Add warning for unknown
	options.

2014-03-04  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/feature-extract.cpp: Added use of vector_math.h.
	(vector_min): Removed.
	(vector_max): Removed.
	(vector_sum): Removed.
	* include/vector_math.h: Add vector functions from GCC feature
	extractor.
	* include/Makefile.am: Add vectormath.h to installed headers.
	* include/Makefile.in: Regenerated.

2014-02-13  Simon Cook  <simon.cook@embecosm.com>

	* include/mageec/mageec-ml.h (mageec_ml::init): Mark as virtual.
	(mageec_ml::make_decision): Likewise.
	(file_ml): Define class for file-based pass control.
	* include/mageec/mageec.h (mageec_framework): Add selection of
	mageec_ml or file_ml as machine learner based on definition of
	MAGEEC_FILEML.
	* ml/ml.cpp (file_ml::init): Store string list of passes to execute
	based on executelist file.
	(file_ml::make_decision): Make execute/don't execute decision based on
	previously loaded execute list.

2014-02-11  Simon Cook  <simon.cook@embecosm.com>

	* ml/ml.cpp (mageec_ml::finish): Only delete database object if it
	exists.

2014-02-11  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/feature-extract.cpp (mageec_featextract_exec): Build
	feature vector and pass to MAGEEC storage layer.
	* gcc_plugin/gcc-callbacks.cpp (mageec_pass_gate): Make decision
	on executing pass based on previously stored features.
	* gcc_plugin/gcc-plugin.cpp (void parse_arguments): Add parsing for
	'nodecide' argument to disable decision making.
	* gcc_plugin/mageec-plugin.h (mageec_no_decision): Add parameter for
	disabling decision making.
	* include/mageec/mageec-db.h (get_pass_blob): Defined.
	* include/mageec/mageec-decision.h: Add header for decision state.
	* include/mageec/mageec-ml.h (mageec_framework::make_decision):
	Defined.
	* include/mageec/mageec.h (mageec_framework::featset): Add feature
	vector storage.
	(mageec_framework::take_features): Defined to add to feature storage.
	(mageec_framework::make_decision): Defined for decision making.
	* include/Makefile.am: Add mageec/mageec-decision.h to headers.
	* include/Makefile.in: Regenerated.
	* mageec/mageec.cpp (mageec_framework::new_file): Clear feature store.
	(mageec_framework::end_file): Clear feature store.
	(mageec_framework::take_features): Store given features in store.
	(mageec_framework::make_decision): Pass stored features to ML layer.
	* mageec/Makefile.am: Link mageechash against libmageec_learner.
	* mageec/Makefile.in: Regenerated.
	* ml/database.cpp (database::store_pass_blob): Return blob (decision
	tree) if one has been previously stored.
	* ml/ml.cpp: Add C linkage reference to c5_classify_main.
	(mageec_ml::make_decision): Restore decision tree information stored
	in database and use given features to make decision via
	c5_classify_main.

2014-02-11  Simon Cook  <simon.cook@embecosm.com>

	* ml/C5/classify-hooks.c (FreeGlobals): Removed freeing of PropVal, as
	inclusion in library causes free to abort.
	* ml/C5/classify-sample.c (main): Renamed to c5_classify_main.
	(c5_classify_main): Removed printfs, now returns whether test
	was classified as "t"/run pass.

2014-02-11  Simon Cook  <simon.cook@embecosm.com>

	* ml/C5/classify-defns.h, ml/C5/classify-global.c,
	ml/C5/classify-hooks.c, ml/C5/classify-sample.c: Add sample public
	RuleQuest C5 code.
	* ml/Makefile.am: add C5/classify-sample.c to ML library.
	* ml/Makefile.in: Regenerated.

2014-02-11  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-callbacks.cpp: Removed comment about executing
	pass directly.

2014-01-21  Simon Cook  <simon.cook@embecosm.com>

	* include/elfhash.h: Renamed to include/mageec/elfhash.h.
	* include/mageec-db.h: Renamed to include/mageec/mageec-db.h
	* include/mageec-features.h: Renamed to
	include/mageec/mageec-features.h
	* include/mageec-ml.h: Renamed to include/mageec/mageec-ml.h.
	* include/mageec-passes.h: Renamed to include/mageec/mageec-passes.h.
	* include/mageec-result.h: Renamed to include/mageec/mageec-result.h.
	* include/mageec.h: Renamed to include/mageec/mageec.h.
	* gcc_plugin/gcc-callbacks.cpp: Update include references.
	* gcc_plugin/gcc-plugin.cpp: Likewise.
	* gcc_plugin/mageec-plugin.h: Likewise.
	* mageec/elfhash.cpp: Likewise.
	* mageec/elfhash.cpp: Likewise.
	* mageec/features.cpp: Likewise.
	* mageec/hasher.cpp: Likewise.
	* mageec/mageec.cpp: Likewise.
	* mageec/mageechash.cpp: Likewise.
	* mageec/passes.cpp: Likewise.
	* ml/database.cpp: Likewise.
	* ml/ml.cpp: Likewise.
	* include/Makefile.am: Added rule to install headers.
	* include/Makefile.in: Generated.
	* Makefile.am: Add include subdirectory and update include references.
	* Makefile.in: Regenerated.
	* configure.ac: Add generation of include/Makefile.
	* configure: Regenerated.

2014-01-21  Simon Cook  <simon.cook@embecosm.com>

	* doc/mageec.texi: Add build instructions.

2013-11-26  Simon Cook  <simon.cook@embecosm.com>

	* include/mageec-db.h (get_all_results): Added.
	(store_pass_blob): Likewise.
	* include/mageec-features.h (basic_feature): Added string, int
	constructor.
	* include/mageec-result.h (result): Added featlist.
	* mageec/features.cpp (basic_feature): Added string, int constructor.
	(basic_feature::get_feature): Return correct feature value.
	* ml/database.cpp (initdb): Add feature and passblob tables.
	(get_all_results): Add function to return all compiled data known to
	database.
	* ml/ml.cpp (add_result): Store feature list in result object.
	(process_results): Generate files for C5.0 to machine learn passes.
	* ml/Makefile.am: Add passing libexec dir to compiler.
	* ml/Makefile.in: Regenerated.

2013-11-26  Simon Cook  <simon.cook@embecosm.com>

	* ml/C5/attwinnow.c, ml/C5/c50.c, ml/C5/classify.c, ml/C5/confmat.c,
	ml/C5/construct.c, ml/C5/contin.c, ml/C5/defns.i, ml/C5/discr.c,
	ml/C5/extern.i, ml/C5/formrules.c, ml/C5/formtree.c, ml/C5/getdata.c,
	ml/C5/getnames.c, ml/C5/global.c, ml/C5/gpl.txt, ml/C5/implicitatt.c,
	ml/C5/info.c, ml/C5/mcost.c, ml/C5/modelfiles.c, ml/C5/prune.c,
	ml/C5/p-thresh.c, ml/C5/report.c, ml/C5/rules.c, ml/C5/ruletree.c,
	ml/C5/siftrules.c, ml/C5/sort.c, ml/C5/subset.c, ml/C5/text.i,
	ml/C5/trees.c, ml/C5/update.c, ml/C5/utility.c, ml/C5/xval,
	ml/C5/xval.c: Add source files from GPL C5.0 Release 2.07.
	* ml/C5/Makefile.am: Build C5.0 executable.
	* ml/C5/Makefile.in: Generate.
	* ml/Makefile.am: Add C5 subdirectory.
	* ml/Makefile.in: Regenerated.
	* configure.ac: Add generation of ml/C5/Makefile
	* configure: Regenerated.

2013-10-28  Simon Cook  <simon.cook@embecosm.com>

	* doc/Makefile.am: Add mageec.texi for documentation.
	* doc/Makefile.in: Generated.
	* doc/fdl-1.3.texi: Add GFDL 1.3.
	* doc/mdate-sh, doc/texinfo.texi: Add build infrastructure.
	* doc/mageec.texi: Add initial documentation.
	* .gitignore: Ignore .log files.
	* Makefile.am: Build in doc subdirectory.
	* Makefile.in: Rengerated.
	* configure.ac: Generate doc/Makefile.
	* configure: Regenerated.

2013-10-25  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-callbacks.cpp (pass_type_str): Define pass to type
	conversion function.
	(mageec_pass_gate): Print pass information on gate override.
	* gcc_plugin/gcc-plugin.cpp (parse_arguments): Remove
	dumppasses=disable option.
	(plugin_init): Register mageec_pass_gate as PLUGIN_OVERRIDE_GATE.
	Remove use of disable_pass.
	* gcc_plugin/mageec-plugin.h (mageec_gcc_pass_info): Removed.
	(mageec_pass_gate): Declared.
	* gcc_plugin/plugin-info.cpp (mageec_gcc_pass_info): Removed.

2013-10-24  Simon Cook  <simon.cook@embecosm.com>

	* include/mageec-passes.h: Fix include guard.

2013-10-23  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/feature-extract.cpp: Define basic feature extractor.
	* gcc_plugin/gcc-plugin.cpp: Register feature extractor on launch.
	* gcc_plugin/mageec-plugin.h: Add register_featextract.
	* gcc_plugin/Makefile.am: Added feature-extract.cpp to libmageec_gcc.
	* gcc_plugin/Makefile.in: Regenerated.

2013-10-22  Simon Cook  <simon.cook@embecosm.com>

	* include/mageec-db.h (add_result): Add support for adding result to
	database.
	* include/mageec-ml.h (add_result): Add result struct based variant.
	* include/mageec-result.h (result): Create structure for holding
	machine learning result data.
	* include/mageec.h (hash_data): Add global hash function.
	* mageec/Makefile.am: Add hasher.cpp to libmageec.
	* mageec/Makefile.in: Regenerated.
	* mageec/elfhash.cpp: Use hash_data instead of built in hash.
	* ml/database.cpp (initdb): Create passorder and result tables.
	(add_result): Add storage for result structure.
	* ml/ml.cpp (add_result): Convert to result structure and add to
	database.

2013-10-22  Simon Cook  <simon.cook@embecosm.com>

	* ml/Makefile.am: Readd -Werror to flags.
	* ml/Makefile.in: Regenerated.

2013-10-21  Simon Cook  <simon.cook@embecosm.com>

	* mageec/flags.cpp, include/mageec-flags.h: Rename to:
	* mageec/passes.cpp, include/mageec-passes.h.
	* include/mageec-ml.h: Update references to headers.
	* include/mageec-passes.h (mageec_flag): Renamed to mageec_pass.
	(basic_flag): Renamed to basic_pass.
	* mageec/passes.cpp: Likewise.
	* gcc_plugin/gcc_plugin.cpp (plugin_init): Update references to
	new pass class names.
	* include/mageec.h, mageec/mageec.cpp (mageec_framework::all_flags):
	Renamed to all_passes, updated references to new class names.
	* include/mageec-ml.h, ml/ml.cpp (mageec_ml::all_flags): Likewise.
	* include/mageec-db.h (get_flag_list): Renamed to get_pass_list, update
	references to new class names.
	* ml/database.cpp: Likewise.

2013-10-21  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-plugin.cpp (plugin_init): Disable all passes provided
	by database on launch.
	* include/mageec-db.h (mageec::database): Declared first database
	interface.
	* include/mageec-features.h (mageec_feature): Mark name virtual.
	(basic_feature): Implement basic mageec_feature.
	* include/mageec-flags.h (mageec_flag::get_feature): Rename to value().
	(basic_flag): Implement boolean flag.
	* include/mageec-ml.h (mageec_ml): Add private database and flag list.
	(mageec_ml::all_flags): Declared.
	* include/mageec.h (mageec_framework::all_flags): Declared.
	* mageec/mageec.cpp (mageec_framework::all_flags): Defined to call list
	of flags known to machine learner.
	* mageec/features.cpp (basic_feature): Added basic feature definition.
	* mageec/flags.cpp (basic_flag): Added basic flag definition.
	* mageec/Makefile.am: Add features.cpp, flags.cpp to libmageec.
	* mageec/Makefile.in: Regenerated.
	* ml/database.cpp (database): Defined initial MAGEEC pass list
	database.
	* ml/ml.cpp (mageec_ml::init): Load database and pass list on
	initilisation.
	(mageec_ml::finish): Delete database on plugin unload.
	(mageec_ml::all_flags): Returns flag list.
	* ml/Makefile.am: Add database.cpp to libmageec_learner.
	* ml/Makefile.in: Regnerated.
	* configure.ac: Add checks for SQlite3.
	* configure: Regenerated.

2013-10-18  Simon Cook  <simon.cook@embecosm.com>

	* mageec/mageec.cpp (mageec_framework::init): Pass on compiler_version
	and compiler_target instead of empty strings.

2013-10-18  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-callbacks.cpp (mageec_gcc_finish): Stream info/debug
	info out to stderr.
	(mageec_gcc_start_file): Likewise.
	(mageec_gcc_finish_file): Likewise.
	* gcc_plugin/plugin-info.cpp (mageec_gcc_pass_info): Likewise.
	(mageec_gcc_plugin_info): Likewise.
	* mageec/mageec.cpp (mageec_framework::init): Make use of std namespace
	consistent.
	(mageec_framework::new_file): Likewise.
	(mageec_framework::end_file): Likewise.
	(mageec_framework::finish): Likewise.
	* mageec/mageechash.cpp (main): Likewise.
	* ml/ml.cpp (mageec_ml::init): Likewise.
	(mageec_ml::new_file): Likewise.
	(mageec_ml::end_file): Likewise.
	(mageec_ml::finish): Likewise.

2013-10-18  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-plugin.cpp (parse_arguments): Added runtime arguments
	for printing plugin and pass information.
	(plugin_init): Print plugin and pass information only if requested.
	* gcc_plugin/mageec-plugin.h (mageec_gcc_pass_info): Declared.
	* gcc_plugin/plugin-info.cpp (mageec_gcc_pass_info): Added function
	to print passes internal to GCC and attempts to disable all.

2013-09-11  Simon Cook  <simon.cook@embecosm.com>

	* include/elfhash.h (hashedelf): Removed verbose member and from
	constructor.
	* mageec/elfhash.cpp (hashedelf::hashedelf): Removed verbose from
	constructor.
	* mageec/mageechash.cpp (main): Update usage of hashedelf.

2013-09-11  Simon Cook  <simon.cook@embecosm.com>

	* testsuite/Makefile.am: Initilize DejaGnu based test suite.
	* testsuite/Makefile.in: Generated.
	* testsuite/config/unix.exp: Added blank tool config file.
	* testsuite/lib/mageec.exp: Added blank tool init file.
	* testsuite/mageec.tests/Makefile.am: Add test to distribution.
	* testsuite/mageec.tests/Makefile.in: Generated.
	* testsuite/mageec.tests/hash.exp: Add mageechash tests.
	* testsuite/mageec.tests/test.elf: Add test known ELF executable.
	* configure.ac: Add testsuite Makefiles to AC_OUTPUT.
	* configure: Regenerated.
	* Makefile.am: Add testsuite subdirectory.
	* Makefile.in: Regenerated.

2013-09-11  Simon Cook  <simon.cook@embecosm.com>

	* include/mageec-ml.h: Finish machine learner interface.

2013-09-03  Simon Cook  <simon.cook@embecosm.com>

	* mageec/mageechash.cpp (main): Only display hash output if no error
	generating hash.

2013-08-21  James Pallister  <james.pallister@embecosm.com>

	* include/mageec-ml.h (add_result): Correct use of mageec_feature,
	mageec_flag.
	* ml/ml.c (add_result): Likewise.

2013-08-21  Simon Cook  <simon.cook@embecosm.com>

	* include/elfhash.h: Define hashedelf::ignoredsection.
	* include/elfhash.cpp: Likewise.

2013-08-21  Simon Cook  <simon.cook@embecosm.com>

	* include/elfhash.h: Define hashedelf.
	* mageec/elfhash.cpp: Define hashedelf class implementation.
	* mageec/mageechash.cpp: Added command line interface to hashedelf.
	* mageec/Makefile.am: Build mageechash, add elfhash to libmageec.
	* mageec/Makefile.in: Regenerated.
	* Makefile.am: Include elfhash.h with distribution.
	* Makefile.in: Regenerated.
	* configure.ac: Add test for libelf and libgcrypt.
	* configure: Regenerated.

2013-08-14  Simon Cook  <simon.cook@embecosm.com>

	* doc/Doxyfile.in: Add Doxygen documentation.
	* doc/mageec_logo.png: Add logo for Doxygen documentation.
	* gcc_plugin/gcc-callbacks.cpp: Add placeholder GCC Plugin callbacks.
	* gcc_plugin/gcc-plugin.cpp: Initial plugin.
	* gcc_plugin/mageec-plugin.h: Add header for GCC plugin.
	* gcc_plugin/plugin-info.cpp: Add printout for GCC/Plugin information.
	* gcc_plugin/Makefile.am: Added.
	* gcc_plugin/Makefile.in: Generated.
	* include/mageec-features.h: Add initial work on feature class.
	* include/mageec-flags.h: Add initial work on flag class.
	* include/mageec-ml.h: Add initial interface for machine learner.
	* include/mageec.h: Add initial MAGEEC interface.
	* mageec/mageec.cpp: Add initial MAGEEC class implementation.
	* mageec/Makefile.am: Added.
	* mageec/Makefile.in: Generated.
	* ml/ml.cpp: Add inital machine learner class implementation.
	* ml/Makefile.am: Added.
	* ml/Makefile.in: Generated.
	* AUTHORS, COPYING, INSTALL, NEWS, m4/, aclocal.m4, config.guess,
	config.sub, depcomp, install-sh, ltmain.sh, missing: Add build
	infrastructure.
	* README: Add project introduction readme.
	* Makefile.am: Added.
	* Makefile.in: Generated.
	* configure.ac: Added.
	* configure: Generated.
	* .gitignore: Add initial list of files to ignore.
