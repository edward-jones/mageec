2017-03-07  Edward Jones  <ed.jones@embecosm.com>

	* lib/Database.cpp: Set timeout for access to the database
	to around 3 hours.

2017-03-06  Edward Jones  <ed.jones@embecosm.com>

	* scripts/combined-elimination.py: Allow incomplete results
	when measuring benchmarks.

2017-03-03  Edward Jones  <ed.jones@embecosm.com>

	* lib/Database: Set the journaling mode on the SQLite database
	to be an in-memory journal.

2017-03-03  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Framwork.h (Framework::Framework): Add
	with_sql_trace argument.
	(Framework::setSQLTrace): Added method.
	* include/mageec/SQLQuery.h (SQLQuery::m_sql_query): Added
	member.
	* include/mageec/Util.h (withSQLTrace setSQLTrace): Added
	functions.
	* lib/Driver.cpp (main): Parse --sql-trace argument, pass
	value to Framework constructor.
	* lib/Framework.cpp (Framework::Framework): Add with_sql_trace
	argument.
	(Framework::setSQLTrace): Add implementation of function.
	* lib/SQLQuery.cpp (SQLQuery::m_sql_trace): Add member.
	(SQLQuery::exec): Print sql query on query execution.
	* lib/Util.cpp (withSQLTrace setSQLTrace): Added functions.

2017-03-02  Edward Jones  <ed.jones@embecosm.com>

	* lib/Database.cpp (Database::appendDatabase): Add all compilation
	ids in one large transaction.

2017-03-02  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Database.h (Database::appendDatabase): Add
	function to merge databases.
	* lib/Database.cpp (Database::appendDatabase): Likewise.
	* lib/Driver.cpp (DriverMode): Add kAppend mode enumeration value.
	(appendDatabase): Add driver function to merge databases.
	(main): Parse and handle --append argument.

2017-02-20  Edward Jones  <ed.jones@embecosm.com>

	* script/combined-elimination.py: Treat result values as floating
	point values instead of integers.

2017-02-20  Edward Jones  <ed.jones@embecosm.com>

	* script/combined-elimination.py: Add executable flags to be used
	when measuring executables.
	* script/measure-code-size.py: Likewise.

2017-02-10  Edward Jones  <ed.jones@embecosm.com>

	* script/combined-elimination.py: Also do a run at -Os for
	comparison purposes.

2017-02-10  Edward Jones  <ed.jones@embecosm.com>

	* lib/Driver.cpp (parseResults): Read in the newly formatted
	results csv file.

2017-02-10  Edward Jones  <ed.jones@embecosm.com>

	* script/measure-code-size.py: Update result file csv output to
	include more metadata about the compiled element

2017-02-09  Edward Jones  <ed.jones@embecosm.com>

	* script/combined-elimination.py: Added file.

2017-01-24  Edward Jones  <ed.jones@embecosm.com>

	* script/measure-code-size.py (get_executable_src_files): Always
	extract an absolute path for each source file in the executable.
	(measure_executable): Do not add modules and functions of size 0
	to the results.
	(main): Correct an inverted check for errors.

2017-01-24  Edward Jones  <ed.jones@embecosm.com>

	* lib/Database.cpp (Database::addResults): Check that a result
	is for a valid CompilationID before adding it.

2017-01-24  Edward Jones  <ed.jones@embecosm.com>

	* script/feature-extract.py: Add --cxx argument.
	* script/generate-builds.py: Likewise.
	* script/mageec.py: Likewise.

2017-01-24  Edward Jones  <ed.jones@embecosm.com>

	* script/generate-builds.py: Fix typo causing -fmageec-gfortran to
	not be passed to the builder.

2017-01-24  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Util.h (getFullPath getBaseName): Added functions.
	* lib/Util.cpp: Likewise.

2017-01-20  Edward Jones  <ed.jones@embecosm.com>

	* script/feature-extract.py: Add --fort argument, rename --cflags
	argument to just --flags.
	* script/generate-builds.py: Likewise.
	* script/mageec.py (build): Add support for building using a
	custom build script. Add support for --fort argument and
	rename cflags to flags.
	(preserve_cwd): Add function to be used in 'with' clauses to
	preserved the current working directory across a block.
	* script/measure-code-size.py: Refactor to use preserved_cwd.

2017-01-17  Edward Jones  <ed.jones@embecosm.com>

	* script/feature-extract.py: Add ability to specify number of jobs
	for a build.
	* script/generate-builds.py: Likewise.
	* script/mageec.py: Likewise.

2017-01-17  Edward Jones  <ed.jones@embecosm.com>

	* lib/Database.cpp: Fix ml_id field in SQL to be text instead of
	a blob.

2017-01-16  Edward Jones  <ed.jones@embecosm.com>

	* script/generate-builds.py: Do not toggle passed which aren't
	supported in the earliest mageec-supported version (4.5)

2017-01-16  Edward Jones  <ed.jones@embecosm.com>

	* script/feature-extract.py: Update formatting.
	* script/generate-builds.py: Likewise.
	* script/mageec.py: Likewise.
	* script/measure-code-size.py: Likewise.

2017-01-16  Edward Jones  <ed.jones@embecosm.com>

	* lib/Database.cpp (Database::addResults): If a result is
	added for a compilation id and metric already in the database,
	replace the old value.

2017-01-16  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Database.h (Database::InputResult): Remove structure.
	(Database::addResults): Change results argument to be a map from
	a CompilerID + metric name to a value.
	* lib/Database.cpp (Database::addResults): Change results argument to
	be a map from a CompilerID + metric name to a value.
	* lib/Driver.cpp (parseResults): Avoid adding duplicate results
	to the database. Instead warn the user of the offending compilation
	id.

2017-01-16  Edward Jones  <ed.jones@embecosm.com>

	* script/feature-extract.py: Fix argument parsing.
	* script/generate-builds.py: Likewise.
	* script/measure-code-size.py: Added script to measure the
	size of executables in a directory.

2017-01-16  Edward Jones  <ed.jones@embecosm.com>

	* script/build-and-measure.py: Deleted file.
	* script/feature_extract.py: Rewritten, renamed to feature-extract.py
	* script/feature-extract.py: Added file.
	* script/generate-build.py: Rewritten, renamed to generate-builds.py
	* script/generate-builds.py: Added file.
	* script/mageec_common.py: Renamed to mageec.py. Added
	feature extraction functionality.
	* script/mageec.py: Added file.
	* script/measure-code-size.py: Deleted file.

2017-01-10  Edward Jones  <ed.jones@embecosm.com>

	* script/feature_extract.py: Added file.
	* script/generate-build.py: Remove feature_extract function.
	* script/mageec_common.py: Renamed to mageec.py.
	* script/mageec.py: Renamed from mageec_common.py, added
	feature_extract function from generate-build.py

2017-01-10  Edward Jones  <ed.jones@embecosm.com>

	* script/generate-build.py: Factor out code into mageec_common.py
	* script/mageec_common.py: Added file.

2017-01-10  Edward Jones  <ed.jones@embecosm.com>

	* script/generate-build.py: Update to reflect changes to the framework.

2017-01-10  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Database.h: Remove use of UUID, use strings instead.
	* include/mageec/Framework.h: Likewise.
	* include/mageec/ML.h: Likewise.
	* include/mageec/ML/C5.h: Likewise.
	* include/mageec/TrainedML.h: Likewise.
	* include/mageec/Util.h: Likewise.
	* lib/Database.cpp: Likewise.
	* lib/Driver.cpp: Likewise.
	* lib/Framework.cpp: Likewise.
	* lib/ML/C5.cpp: Likewise.
	* lib/TrainedML.cpp: Likewise.

2016-11-28  Edward Jones  <ed.jones@embecosm.com>

	* lib/ML/C5.cpp: Correctly read the prediction from C5.0

2016-11-28  Edward Jones  <ed.jones@embecosm.com>

	* lib/ML/C5.cpp: Place a comma after all cases in the .cases file.

2016-11-28  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Add Types.cpp to build.
	* lib/Types.cpp: Added file.
	* lib/Util.cpp: Update to advance iterators when reading bytes.

2016-11-28  Edward Jones  <ed.jones@embecosm.com>

	* lib/ML/C5.cpp: Make decisions using the C5 library.

2016-11-28  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Link against the C5 library. Always build C5.0
	* lib/ML/C5.cpp: Refactor to use C5 library.
	* lib/ML/C5/c50.c: Update to build against MAGEEC.
	* lib/ML/C5/redefine.c: Likewise.
	* lib/ML/C5/rsample.c: Likewise.
	* lib/ML/C5/rulebasedmodels.c: Likewise.
	* lib/ML/C5/transform.h: Likewise.

2016-11-28  Edward Jones  <ed.jones@embecosm.com>

	* lib/ML/C5/CMakeLists.txt: Update to reflect renaming of files.
	* lib/ML/C5/top.c: Rename to c50.c, remove R dependencies.
	* lib/ML/C5/rc50.c: Rename to c50main.c, remove R depedencies.

2016-11-28  Edward Jones  <ed.jones@embecosm.com>

	* lib/ML/C5/CMakeLists.txt: Updated to reflect new C5.0 source files.
	* lib/ML/C5/Makevars.in: Added file.
	* lib/ML/C5/attwinnow.c: Updated to new C5.0 implementation.
	* lib/ML/C5/classify.c: Likewise.
	* lib/ML/C5/confmat.c: Likewise.
	* lib/ML/C5/construct.c: Likewise.
	* lib/ML/C5/contin.c: Likewise.
	* lib/ML/C5/defns.i: Renamed to defns.h.
	* lib/ML/C5/discr.c: Updated to new C5.0 implementation.
	* lib/ML/C5/extern.i: Renamed to extern.h.
	* lib/ML/C5/formrules.c: Updated to new C5.0 implementation.
	* lib/ML/C5/formtree.c: Likewise.
	* lib/ML/C5/getdata.c: Likewise.
	* lib/ML/C5/getnames.c: Likewise.
	* lib/ML/C5/global.c: Likewise.
	* lib/ML/C5/hash.c: Added file.
	* lib/ML/C5/hash.h: Likewise.
	* lib/ML/C5/hooks.c: Likewise.
	* lib/ML/C5/implicitatt.c: Updated to new C5.0 implementation.
	* lib/ML/C5/info.c: Likewise.
	* lib/ML/C5/mcost.c: Likewise.
	* lib/ML/C5/modelfiles.c: Likewise.
	* lib/ML/C5/p-thresh.c: Likewise.
	* lib/ML/C5/prune.c: Likewise.
	* lib/ML/C5/c50.c: Renamed to rc50.c.
	* lib/ML/C5/redefine.c: Added file.
	* lib/ML/C5/redefine.h: Likewise.
	* lib/ML/C5/report.c: Removed file.
	* lib/ML/C5/rsample.c: Added file.
	* lib/ML/C5/rsample.h: Likewise.
	* lib/ML/C5/rulebasedmodels.c: Likewise.
	* lib/ML/C5/rulebasedmodels.h: Likewise.
	* lib/ML/C5/rules.c: Updated to new C5.0 implementation.
	* lib/ML/C5/ruletree.c: Likewise.
	* lib/ML/C5/siftrules.c: Likewise.
	* lib/ML/C5/sort.c: Likewise.
	* lib/ML/C5/strbuf.c: Added file.
	* lib/ML/C5/strbuf.h: Likewise.
	* lib/ML/C5/subset.c: Updated to new C5.0 implementation.
	* lib/ML/C5/text.i: Renamed to text.h
	* lib/ML/C5/top.c: Added file.
	* lib/ML/C5/transform.h: Likewise.
	* lib/ML/C5/trees.c: Updated to new C5.0 implementation.
	* lib/ML/C5/undefined.xsum: Removed file.
	* lib/ML/C5/update.c: Updated to new C5.0 implementation
	* lib/ML/C5/utility.c: Likeiwse.
	* lib/ML/C5/xval: Removed file.
	* lib/ML/C5/xval.c: Updated to new C5.0 implementation.

2016-10-26  Edward Jones  <ed.jones@embecosm.com>

	* lib/Database.cpp: Fix increment of feature_class when training.

2016-10-25  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Database.h (Database::newFeatureGroup)
	(Database::getFeatureGroupFeatures): Remove functions.
	(Database::newCompilation): Add features_class parameter.
	(Database::trainMachineLearner): Add feature_class parameter.
	(ResultIterator::ResultIterator): Likewise.
	(ResultIterator::m_metric): Remove unused member.
	* include/mageec/TrainedML.h (TrainedML::TrainedML): Add
	feature_class parameter.
	(TrainedML::getFeatureClass): Add method.
	(TrainedML::m_feature_class): Add private member.
	* include/mageec/Types.h (FeatureGroupID): Remove enumeration.
	(FeatureClass): Add enumeration.
	* lib/Database.cpp (create_feature_group_set_table): Remove global.
	(create_compilation_table): Update sql to add feature_class_id column.
	(create_machine_learner_table): Likewise.
	(create_program_unit_debug_table): Rename to
	create_compilation_debug_table.
	(Database::init_db): Remove create_feature_group_set_table query.
	(Database::getTrainedMachineLearners): Retrieve feature_class_id
	in sql query, use when creating new TrainedMLs.
	(Database::garbageCollect): Remove deletion of unused feature groups.
	(Database::newFeatureGrouo): Remove function.
	(Database::getFeatureGroupFeatures): Likewise.
	(Database::newCompilation Database::trainMachineLearners):
	Add feature_class parameter.
	(Database::trainMachineLearner): Add feature_class_id to sql query
	adding a new MachineLearner.
	(ResultIterator::ResultIterator): Add feature_class parameter.
	(ResultIterator::m_metric): Remove member.
	* lib/Driver.cpp (trainDatabase): Also train against each feature
	class.
	* lib/TrainedML.cpp (TrainedML::m_feature_class): Add private member.
	(TrainedML::TrainedML): Add feature_class parameter.
	(TrainedML::getFeatureClass): Added function.

2016-10-25  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Remove FileML.cpp from MLs to build
	* include/mageec/ML/FileML.h: Deleted file.
	* lib/Driver.cpp: Remove creation of FileML machine learner.
	* lib/ML/FileML.cpp: Deleted file.

2016-10-25  Edward Jones  <ed.jones@embecosm.com>

	* lib/ML/C5.cpp (C5Driver::train): Resize vectors for classifier
	trees to be included.

2016-09-23  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Database.h (Database::garbageCollect): Add function.
	* lib/Database.cpp (Database::garbageCollect): Add function
	implementation.
	* lib/Driver.cpp: Add handling for --garbage-collect mode.

2016-09-22  Edward Jones  <ed.jones@embecosm.com>

	* lib/ML/C5.cpp: Close the C5.0 .data file before C5 tries to use it.
	Fix other bugs.

2016-09-22  Edward Jones  <ed.jones@embecosm.com>

	* lib/Database.cpp: Merge FeatureInstance table with
	FeatureSetFeatures, and ParameterInstance table with
	ParameterSetParameters.

2016-09-22  Edward Jones  <ed.jones@embecosm.com>

	 * include/mageec/Database.h (DatabaseTransaction): Rename to
	 SQLTransaction.
	 * lib/Database.cpp: Rename DatabaseTransactions to SQLTransaction

2016-09-22  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Util.h (Metric): Remove type.
	* include/mageec/Types.h (metricToString stringToMetric):
	Remove functions.

2016-09-22  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/AttributeSet.h (AttributeSet::dump): Added function.
	* include/mageec/Framework.h (Framework::print)
	(Framework::dump): Likewise.
	* include/mageec/TrainedML (TrainedML::print)
	(TrainedML::dump): Likewise.
	* lib/Framework.cpp (Framework::print): Added function implementation.
	* lib/TrainedML.cpp (TrainedML::print): Likewise.

2016-09-22  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/AttributeSet.h (AttributeSet::hash)
	(AttributeSet::operator< AttributeSet::operator==)
	(AttributeSet::operator!= AttributeSet::compare): Add functions.
	* include/mageec/Database.h (Database::getFeatures): Replace with
	Database::getFeatureGroupFeatures.
	(Database::getFeatureSetFeatures): Added function.
	(Database::getFeatureGroupFeatures): Likewise.
	* include/mageec/Result.h (Result::getFeatures)
	(Result::getParameters): Return by const reference instead of
	by-value.
	* lib/Database.cpp (Database::newFeatureSet): Refactor to rely
	on AttributeSet hashing and comparison functionality.
	(Database::newParameterSet): Likewise.
	(Database::getFeatures): Replace with Database::getFeatureSetFeatures
	(Database::getFeatureSetFeatures)
	(Database::getFeatureGroupFeatures): Add functions.
	* lib/C5.cpp (C5Driver::train): Refactor to rely on AttributeSet
	hashing and comparison functionality.

2016-09-21  Edward Jones  <ed.jones@embecosm.com>

	* lib/Database.cpp: Store command for compilation in the database.
	(Database::newCompilation): Add command argument.
	* include/mageec/Database.h
	(Database::newCompilation): Add command argument.

2016-09-21  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Attribute.h: Make formatting more consistent.
	* include/mageec/SQLQuery.h: Likewise.
	* include/mageec/Util.h: Likewise.
	* lib/Database.cpp: Likewise.
	* lib/Driver.cpp: Likewise.
	* lib/ML/FileML.cpp: Likewise.
	* lib/SQLQuery.cpp: Likewise.

2016-09-21  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/SQLQuery.h (SQLQuery::execute): Rename to exec
	* lib/SQLQuery.cpp (SQLQuery::execute): Likewise.
	* lib/Database.cpp: Use SQLQuery::exec instead of 'execute'

2016-09-21  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Rename DatabaseQuery.cpp to SQLQuery.cpp
	* include/mageec/Database.h: Use SQLQuery, SQLQueryBuilder, and
	SQLType instead of DatabaseQuery, DatabaseQueryBuilder and
	QueryParamType.
	* lib/Database.cpp: Likewise.
	* include/mageec/DatabaseQuery.h: Rename to SQLQuery.h.
	* include/mageec/mageec/SQLQuery.h: Added file.
	* lib/mageec/DatabaseQuery.cpp: Rename to SQLQuery.cpp.
	* lib/mageec/SQLQuery.cpp: Added file.

2016-09-21  Edward Jones  <ed.jones@embecosm.com>

	* lib/ML/C5.cpp: Correct field name for the target parameter in the
	.names field for the C5 machine learner.

2016-09-21  Edward Jones  <ed.jones@embecosm.com>

	* lib/Database.cpp: Readd FeatureType and ParameterType tables.
	These are needed by the machine learner when training.

2016-09-19  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Database.h: Use a string for metric parameters.
	(Database::getFeatures Database::getParameters): Added functions.
	(ResultIterator::ResultIterator): Pass in Database& as well as the
	sqlite3 database connection.
	(ResultIterator::m_db): Change type from sqlite3* to Database*.
	* include/mageec/TrainedML.h: Use a string to represent metric.
	* lib/Database.cpp: Use a string to represent metric in the
	database.
	(Database::getFeatures Database::getParameters): Added functions.
	(ResultIterator::ResultIterator): Pass in Database& as well as the
	sqlite3 database connection.
	(ResultIterator::m_db): Change type from sqlite3* to Database*.
	(ResultIterator::operator*): Simplify implementation by using
	Database::getFeatures and Database::getParameters.
	* lib/Driver.cpp: Use a string to represent metrics.
	* lib/TrainedML.cpp: Likewise.
	* lib/Util.cpp (metricToString stringToMetric): Remove functions.

2016-08-23  Edward Jones  <ed.jones@embecosm.com>

	* lib/Database.cpp: Correct SQL statement to add compilation to
	the database

2016-08-15  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Add building of GCC standalone driver.

2016-08-02  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Update flag setting when building mageec.

2016-08-02  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Attribute.h: Fix compiler cast warning.
	* lib/Database.cpp: Likewise.
	* lib/Driver.cpp: Fix iterator not using a reference.

2016-08-02  Edward Jones  <ed.jones@embecosm.com>

	* lib/Database.cpp: Fix SQL for FeatureInstance table creation.

2016-08-02  Edward Jones  <ed.jones@embecosm.com>

	Remove the original GCC plugin

	* CMakeLists.txt: Remove gcc_plugin from the build system.
	* gcc_plugin/.gitignore: Deleted file.
	* gcc_plugin/AUTHORS: Likewise.
	* gcc_plugin/CMakeLists.txt: Likewise.
	* gcc_plugin/COPYING: Likewise.
	* gcc_plugin/ChangeLog: Likewise.
	* gcc_plugin/FeatureExtract.cpp: Likewise.
	* gcc_plugin/Features.h: Likewise.
	* gcc_plugin/GCCCallbacks.cpp: Likewise.
	* gcc_plugin/GCCPlugin.cpp: Likewise.
	* gcc_plugin/MAGEECPlugin.h: Likewise.
	* gcc_plugin/Parameters.h: Likewise.
	* gcc_plugin/README: Likewise.

2016-07-15  Edward Jones  <ed.jones@embecosm.com>

	* script/generate-build.py: Make reslient to failures when a
	benchmark is being generated.

2016-07-15  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Attribute.h: Add PassSeqParameter attribute, a
	parameter which represents the passes executed during the compile.
	* include/mageec/Database.h (Database::newPassSequence): Delete
	method, pass sequences are now expressed as a parameter.
	(Database::newCompilation): Remove pass_sequence parameter.
	* include/mageec/Decision.h: Rename PassList to PassSeq
	* include/mageec/Result.h (Result::m_pass_sequence): Remove member.
	(Result::m_pass_features): Likewise.
	(Result::getPassSequence): Remove method.
	(Result::getPassParameters): Likewise.
	(Result::getFeaturesAfterPass): Likewise.
	(Result::addPass): Likewise.
	(Result::addFeatures): Likewise.
	* include/mageec/Types.h: Rename kPassList to kPassSeq.
	(ParameterType): Add kPassSeq enumeration value.
	(PassID PassSequenceID): Add enumerations.
	* lib/Database.cpp: Remove FeatureType, ParameterType, and
	PassSequencePass tables.
	* lib/ML/C5.cpp: Updated to handle that pass sequences are now a
	parameter.
	* lib/ML/FileML.cpp: Rename kPassList to kPassSeq.

2016-02-02  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Install newly added scripts.
	* scripts/build-and-measure.py: New file.
	* scripts/generate-build.py: Likewise.
	* scripts/measure-code-size.py: Likewise.

2016-02-02  Edward Jones  <ed.jones@embecosm.com>

	* lib/Driver.cpp (main): Actually return 0 on success.

2016-01-21  Edward Jones  <ed.jones@embecosm.com>

	* lib/Driver.cpp (parseResults): Change results file format to
	be a simpler .csv format.
	* lib/FileML.cpp (setDecisionConfig): Change decision configuration
	file to be a simpler .csv format.

2016-01-21  Edward Jones  <ed.jones@embecosm.com>

	* lib/Database.cpp: Add more debug.
	* lib/Driver.cpp: Likewise.
	* lib/Framework.cpp: Likewise.
	* lib/ML/FileML.cpp: Likewise.

2016-01-20  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/DatabaseQuery.h (DatabaseQuery): Make move
	constructor non-default, as we now have an implementation.
	(DatabaseQuery::m_is_init): Add member keeping track of whether
	the query is currently initialized and useable.
	* include/mageec/Util.h (UUID::data): Return a reference to the
	data instead of a copy.
	* lib/DatabaseQuery.cpp (DatabaseQuery::DatabaseQuery): Implement
	move constructor.

2016-01-13  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Attribute.h: Fix doxygen comments.
	* include/mageec/AttributeSet.h: Likewise.
	* include/mageec/Database.h: Likewise.
	* include/mageec/DatabaseQuery.h: Likewise.
	* include/mageec/ML.h: Likewise.

2016-01-13  Edward Jones  <ed.jones@embecosm.com>

	* doc/CMakeLists: Make and install pdf documentation.

2016-01-13  Edward Jones  <ed.jones@embecosm.com>

	* lib/Driver.cpp (getMachineLearners): Remove wildcard match for
	--ml flag.
	(trainDatabase): Add debug when training for each metric.
	* lib/FileML.cpp: Fix gcc warnings and errors.
	* lib/Util.cpp: Likewise.

2016-01-13  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Use sane defaults for options, add option for
	the GCC plugin include directory.
	* doc/CMakeLists.txt: Rename all-doc, all-info, all-html, all-pdf to
	just doc, info, html and pdf respectively.
	* lib/ML/C5/CMakeLists.txt: Added a minimum required version.

2016-01-13  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Database.h (Database::addFeaturesAfterPass):
	Removed method, continuous feature extraction interface removed.
	* lib/Database.cpp (create_compilation_feature_table):
	Removed SQL query.

2016-01-13  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/ML.h: Remove iterative training interfaces.
	* include/mageec/ML/C5.h: Likewise.
	* include/mageec/ML/FileML.h: Likewise.
	* lib/ML/C5.cpp: Likewise.
	* lib/ML/FileML.cpp: Likewise.

2016-01-13  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Types.h (TypeID ID): Define integer types that
	mageec enumerations and IDs are based on.
	* lib/Database.cpp: Use mageec::ID where appropriate to improve
	type safety.

2016-01-13  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Attribute.h: Added file.
	* include/mageec/AttributeSet.h: Likewise.
	* include/mageec/Feature.h: Removed file.
	* include/mageec/FeatureSet.h: Likewise.
	* include/mageec/Parameter.h: Likewise.
	* include/mageec/ParameterSet.h: Likewise.
	* include/mageec/Database.h: Use Attribute.h and AttributeSet.h for
	Feature and Parameter definitions.
	* include/mageec/ML.h: Likewise.
	* include/mageec/ML/C5.h: Likewise.
	* include/mageec/ML/FileML.h: Likewise.
	* include/mageec/Result.h: Likewise.
	* include/mageec/TrainedML.h: Likewise.
	* lib/Database.cpp: Likewise.
	* lib/ML/C5.cpp: Likewise.
	* lib/ML/FileML.cpp: Likewise.
	* lib/TrainedML.cpp: Likewise.

2016-01-12  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/FeatureSet.h (FeatureSet::size): Added method.
	* include/mageec/Result.h (Result::getPassName): Removed method.
	(Result::getPassSequence): Added method.
	* lib/Database.cpp (Database::trainMachineLearner): Extract
	the pass sequence from the database as well as the parameters and
	features.
	(ResultIterator::operator*): Correct select_features query to
	extract the correct identifiers.
	* lib/ML/C5.cpp (ResultComparator): Removed comparator object.
	(ResultFeatureComparator): Added comparator object to compare
	feature sets.
	(C5Driver::train): Use only the best results for each distinct
	feature set. Add training for passes too.
	* lib/ML/C5/CMakeLists.txt: Install the c5.0 machine learner binary.

2016-01-12  Edward Jones  <ed.jones@embecosm.com>

	* lib/Driver.cpp: Fix an error which meant the --add-results flag was
	ignored.

2016-01-12  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Database.h: File formatted with clang-format.
	* include/mageec/DatabaseQuery.h: Likewise.
	* include/mageec/Decision.h: Likewise.
	* include/mageec/Feature.h: Likewise.
	* include/mageec/FeatureSet.h: Likewise.
	* include/mageec/Framework.h: Likewise.
	* include/mageec/ML.h: Likewise.
	* include/mageec/ML/C5.h: Likewise.
	* include/mageec/ML/FileML.h: Likewise.
	* include/mageec/Parameter.h: Likewise.
	* include/mageec/ParameterSet.h: Likewise.
	* include/mageec/Result.h: Likewise.
	* include/mageec/TrainedML.h: Likewise.
	* include/mageec/Types.h: Likewise.
	* include/mageec/Util.h: Likewise.
	* lib/Database.cpp: Likewise.
	* lib/DatabaseQuery.cpp: Likewise.
	* lib/Driver.cpp: Likewise.
	* lib/Framework.cpp: Likewise.
	* lib/ML/C5.cpp: Likewise.
	* lib/ML/FileML.cpp: Likewise.
	* lib/TrainedML.cpp: Likewise.
	* lib/Util.cpp: Likewise.

2016-01-12  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Database.h: Make file include order consistent.
	* include/mageec/DatabaseQuery.h: Likewise.
	* include/mageec/Decision.h: Likewise.
	* include/mageec/FeatureSet.h: Likewise.
	* include/mageec/Framework.h: Likewise.
	* include/mageec/ML.h: Likewise.
	* include/mageec/ML/FileML.h: Likewise.
	* include/mageec/ParameterSet.h: Likewise.
	* include/mageec/Result.h: Likewise.
	* include/mageec/TrainedML.h: Likewise.
	* include/mageec/Types.h: Likewise.
	* include/mageec/Util.h: Likewise.
	* lib/Database.cpp: Likewise.
	* lib/DatabaseQuery.cpp: Likewise.
	* lib/Framework.cpp: Likewise.
	* lib/ML/FileML.cpp: Likewise.
	* lib/TrainedML.cpp: Likewise.
	* lib/Util.cpp : Likewise.

2016-01-12  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Remove mageec_test target, as it is unused.
	* include/mageec/Database.h (Database::InputResult): New structure for
	result input into the database.
	(Database::addResults): Update args to use a set of InputResult data.
	* lib/Database.cpp (addResults): Likewise.
	* lib/Driver.cpp (addResults parseResults): Added function to
	parse in results data and insert it into the database.
	(main): Call addResults when the --add-results argument is specified.
	* lib/Main.cpp: Removed file, as it was unused.

2016-01-12  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Util.h: Simplify MAGEEC_ERR and MAGEEC_WARN macros.
	* lib/Driver.cpp (printVersion printDatabaseVersion): Prefix version
	and database versions in print out so they can be differentiated.
	(printHelp): Add print-mls option to help.
	(main): Rename print_trained_mls to print_mls.

2016-01-08  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/TrainedML.h (TrainedML::TrainedML): Added constructor
	which does not take a metric or blob argument.
	(TrainedML::TrainedML): Removed db argument from constructors as it
	was unnecessary.
	(TrainedML::m_db): Removed member.
	* include/mageec/Util.h (UUID::operator!=): Added method.
	(metricToString stringToMetric): Moved functions from Driver.cpp so
	that they are accessible to the plugin.
	* lib/Database.cpp (Database::getTrainedMachineLearners): Update
	creation of TrainedML.
	* lib/Driver.cpp (metricToString stringToMetric): Moved functions
	to Util.cpp.
	(printTrainedMLs): Update so that db_path is optional. Return a
	bool result instead of int.
	(createDatabase): Return a bool instead of int result.
	(trainDatabase): Likewise.
	(main): Minor refactor of variable names.
	* lib/TrainedML.cpp (TrainedML::TrainedML): Added constructor
	implementation.
	(TrainedML::TrainedML): Remove db argument from constructors.
	* lib/Util.cpp (metricToString stringToMetric): Moved implementation
	from Driver.cpp.

2016-01-07  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Add FileML.cpp to ML_SOURCES
	* include/mageec/ML.h (IMachineLearner::requiresTraining)
	(IMachineLearner::requiresTrainingConfig)
	(IMachineLearner::setTrainingConfig)
	(IMachineLearner::requiresDecisionConfig)
	(IMachineLearner::setDecisionConfig): Added methods.
	* include/mageec/ML/C5.h (C5Driver::requiresTraining)
	(C5Driver::requiresTrainingConfig C5Driver::setTrainingConfig)
	(C5Driver::requiresDecisionConfig C5Driver::setDecisionConfig):
	Likewise.
	* include/mageec/ML/FileML.h (FileML): Added definition of FileML.
	* include/mageec/TrainedML.h (TrainedML::requiresDecisionConfig)
	(TrainedML::setDecisionConfig): Added methods.
	* lib/Database.cpp (getTrainedMachineLearners): Make IMachineLearner
	non-const.
	* lib/FileML.cpp (FileML): Added implementation of FileML.
	* lib/TrainedML.cpp (TrainedML::TrainedML): Make IMachineLearner
	parameter non-const.
	(TrainedML::requiresDecisionConfig)
	(TrainedML::setDecisionConfig): Added implementations.

2016-01-07  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Renamed MAGEEC_DEBUG definition to MAGEEC_WITH_DEBUG.
	* include/mageec/Framework.h (Framework::Framework): Add debug
	parameter.
	(Framework::setDebug): Added function.
	* include/mageec/Util.h (withDebug setDebug): Added method.
	(MAGEEC_DBG): Renamed to MAGEEC_DEBUG.
	* lib/Database.cpp: Refactor debug handling.
	* lib/DatabaseQuery.cpp: Likewise.
	* lib/Driver.cpp (DriverMode): Add kAddResult enum value.
	(printHelp): Update help to reflect new interface.
	(main): Refactor argc parsing, add support for debug flag and
	add-result mode.
	* lib/Framework.cpp (Framework::Framework): Add debug parameter.
	(Framework::setDebug): Added method.
	* lib/Main.cpp: Refactor debug handling.
	* lib/Util.cpp (with_debug): Added global value to determine if debug
	is enabled.
	(withDebug setDebug): Added functions.

2016-01-06  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Disable two more clang warnings.
	* include/mageec/Util.h: Fix clang warnings.
	* lib/Database.cpp: Likewise.
	* lib/Driver.cpp: Likewise.
	* lib/C5.cpp: Likewise.
	* lib/Util.cpp: Likewise.

2016-01-06  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Database.h (DatabaseTransaction): New wrapper class
	around a database transaction.
	* lib/Database.cpp: Use database transactions throughout.
	(DatabaseTransaction): Added implementation.

2016-01-06  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Database.h (Database::newFeatureGroup): Refine to take
	a set of FeatureSetID rather than vector.
	(Database::addPasses): Removed method.
	(Database::newPassSequence): Method now takes a list of passes to
	add to the database.
	* include/mageec/Types.h (CompilationID FeatureSetID FeatureGroupID)
	(PassID PassSequenceID ParameterSetID ParameterGroupID): Redefined
	types to be uint64_t so that they can store a hash.
	* include/mageec/Util.h (read64LE wrte64LE): Added functions.
	* lib/Database.cpp (create_feature_set_table)
	(create_feature_group_table create_parameter_set_table)
	(create_pass_sequence_table): Remove query strings to create
	some tables.
	(Database::init_db): Remove creation of some tables.
	(Database::newFeatureSet): The returned FeatureSetID is now a hash of
	the input features, the database no longer contains duplicate feature
	sets.
	(Database::newFeatureGroup): Returned FeatureGroupID is now a hash,
	the database no longer contains duplicate feature groups.
	(Database::newParameterSet): The returned ParameterSetID is now a
	hash of the input features, the database no longer contains duplicate
	parameter sets.
	(Database::newPassSequence): The returned PassSequenceID is now a 
	hash of the input passes. The database no longer contains duplicate
	pass sequences.
	* lib/Main.cpp (main): Updated to use new interfaces.
	* lib/Util.cpp (read64LE write64LE): Added function implementations.

2016-01-05  Simon Cook  <simon.cook@embecosm.com>

	* include/mageec/Util.h (uint64_t crc64): Declare crc64.
	* lib/Util.cpp (uint64_t crc64): Add crc64 implementation.

2016-01-05  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Database.h (Database::addPass): Renamed to addPasses.
	Now takes a sequence of the passes to run.
	(Database::addResult): Renamed to addResults. Now takes a sequence of
	results.
	* lib/Database.cpp (Database::addPass): Renamed to addPasses.
	(Database::addResult): Renamed to addResults.
	* lib/Main.cpp (main): Use updated interfaces for Database::addResult
	and Database::addPasses.

2016-01-04  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Database.h (ResultIterator::m_query): Added member
	to hold the query during execution.
	* include/mageec/DatabaseQuery.h (DatabaseQuery::DatabaseQuery):
	Enable default move constructor, set others to deleted.
	* lib/Database.cpp (Database::trainMachineLearner): Correct feat_iter
	and param_iter iterators so that they iterate properly.
	(ResultIterator::ResultIterator): Initialize m_query.
	(ResultIterator::operator*): Increment feature_iter and param_iter
	iterators.
	* lib/C5.cpp (C5Driver::train): Fix segfault when assigning C5Context.

2015-12-18  Edward Jones  <ed.jones@embecosm.com>

  * CMakeLists.txt: Allow for older versions of CMake.

2015-12-18  Edward Jones  <ed.jones@embecosm.com>

  * lib/Database.cpp (Database::getTrainedMachineLearners): Fix crash
  when there are no trained machine learners in the database.

2015-12-17  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Database.h (Database): Make all uses of
	IMachineLearner non-const.
	* include/mageec/FeatureSet.h: Replace std::endl with newline.
	* include/mageec/Framework.h (Framework::getMachineLearners):
	Return a set of IMachineLearner interfaces instead of UUIDs.
	* include/mageec/ParameterSet.h: Replace std::endl with newline.
	* include/mageec/Util.h (dbg out): Added functions.
	(MAGEEC_PREFIX MAGEEC_ERR MAGEEC_WARN MAGEEC_DBG MAGEEC_STATUS):
	Add macros for debug.
	(UUID::operator std::string): Added function.
	* lib/Database.cpp (Database): Make all uses of IMachineLearner in
	interfaces non-const.
	* lib/DatabaseQuery.cpp: Use newline instead of std::endl throughout.
	* lib/Driver.cpp (MAGEEC_PREFIX MAGEEC_ERR MAGEEC_WARN MAGEEC_MSG):
	macros moved to Util.h.
	(metricToString stringToMetric printVersion printDatabaseVersion)
	(printHelp getMachineLearners printTrainedMLs printMLInterfaces):
	Added functions.
	(main): Add implementation for --help, --version, --database-version,
	--print-trained-machine-learners and --print-machine-learner-interfaces
	options.
	* lib/Framework.cpp (Framework::getMachineLearners): Return a
	set of IMachineLearner interfaces instead of UUIDs.
	* lib/ML/C5.cpp: Replace std::endl with newlines.
	* lib/Main.cpp: Likewise.
	* lib/Util.cpp (dbg out): Added functions.

2015-12-17  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Install libraries and executables, rename mageec_lib
	target to mageec_core.
	* doc/CMakeLists.txt: Install documentation.

2015-12-17  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Util.h (UUID::parse): Fix to UUID parsing code.

2015-12-17  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Update to build C5 classifier.
	* lib/ML/C5/CMakeLists.txt: Added file to build C5.
	* lib/ML/C5/attwinnow.c: Added file.
	* lib/ML/C5/c50.c: Likewise.
	* lib/ML/C5/classify.c: Likewise.
	* lib/ML/C5/confmat.c: Likewise.
	* lib/ML/C5/construct.c: Likewise.
	* lib/ML/C5/contin.c: Likewise.
	* lib/ML/C5/defns.i: Likewise.
	* lib/ML/C5/discr.c: Likewise.
	* lib/ML/C5/extern.i: Likewise.
	* lib/ML/C5/formrules.c: Likewise.
	* lib/ML/C5/formtree.c: Likewise.
	* lib/ML/C5/getdata.c: Likewise.
	* lib/ML/C5/getnames.c: Likewise.
	* lib/ML/C5/global.c: Likewise.
	* lib/ML/C5/gpl.txt: Likewise.
	* lib/ML/C5/implicitatt.c: Likewise.
	* lib/ML/C5/info.c: Likewise.
	* lib/ML/C5/mcost.c: Likewise.
	* lib/ML/C5/modelfiles.c: Likewise.
	* lib/ML/C5/p-thresh.c: Likewise.
	* lib/ML/C5/prune.c: Likewise.
	* lib/ML/C5/report.c: Likewise.
	* lib/ML/C5/rules.c: Likewise.
	* lib/ML/C5/ruletree.c: Likewise.
	* lib/ML/C5/siftrules.c: Likewise.
	* lib/ML/C5/sort.c: Likewise.
	* lib/ML/C5/subset.c: Likewise.
	* lib/ML/C5/text.i: Likewise.
	* lib/ML/C5/trees.c: Likewise.
	* lib/ML/C5/undefined.xsum: Likewise.
	* lib/ML/C5/update.c: Likewise.
	* lib/ML/C5/utility.c: Likewise.
	* lib/ML/C5/xval: Likewise.
	* lib/ML/C5/xval.c: Likewise.

2015-12-15  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Add C5 machine learner library target. Added
	lib/Util.cpp source file to build.
	* include/mageec/Database.h (ResultIterator::operator=): Added method.
	(ResultIterator::m_db): Make a pointer rather than reference.
	* include/mageec/DatabaseQuery.h (DatabaseQuery::operator<<):
	Take a const std::vector<uint8_t>.
	* include/mageec/Decision.h (NativeDecision::NativeDecision):
	Make constructor public.
	* include/mageec/Framework.h (Framework): Fix compile errors.
	(Framework::registerMachineLearner): Framework now takes ownership of
	machine learner interfaces.
	(Framework::hasMachineLearner Framework::getMachineLearners):
	Added public methods.
	* include/mageec/ML.h (IMachineLearner::~IMachineLearner): Make pure
	virtual. Add stub implementation.
	(IMachineLearner::train): Replace 'vector' parameters with sets.
	* include/mageec/ML/C5.h: Added file.
	* include/mageec/Util.h: Factor out read16LE/write16LE.
	* lib/Database.cpp: Minor changes to resolve compile errors.
	* lib/DatabaseQuery.cpp (DatabaseQuery::operator<<):
	Take a const std::vector<uint8_t>.
	* lib/Driver.cpp: Fix compile issues and add further diagnostics.
	* lib/Framework.cpp (Framework::hasMachineLearner)
	(Framework::getMachineLearners): Added implementations.
	* lib/ML/C5.cpp: Fix outstanding compile issues.
	* lib/Util.cpp: Added file.

2015-12-14  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Database.h (version): Make member private.
	(ResultIterator::operator++): Replace with ResultIterator::next
	member function
	* include/mageec/Framework.h (version): Make member private.
	* include/mageec/Types.h (FeatureDesc::operator<)
	(ParameterDesc::operator<): Added comparison function.
	* include/mageec/Util.h (read16LE, write16LE): Add little-endian
	read/write functions.
	* lib/Database.cpp (Database::trainMachineLearner): Refactor to
	use sets of FeatureDesc/ParameterDesc.
	(ResultIterator::operator++): Replaced with ResultIterator::next.
	* lib/Driver.cpp (trainDatabase): Added function.
	(main): Refactor to handle new utility flags and new 'training mode'.
	* lib/ML/C5.cpp: Added implementation of C5.0 driver.
	* lib/TrainedML.cpp: Add missing include.

2015-10-30  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Rename mageec library target to mageec_lib, tmp
	to mageec_test, and add mageec_driver target for the standalone tool.
	Set the output names of the library and driver targets.
	* include/mageec/Database.h (Database::loadDatabase)
	(Database::createDatabase Database::getDatabase):
	Add static functions to load or create a new database from a path.
	(Database::Database): Make constructor private as the static creation
	functions should be used. Change first operand from string to sqlite
	object.
	* include/mageec/Framework.h (Framework::getDatabase): Use a
	std::unique_ptr for return to allow it to fail.
	* include/mageec/Util.h (Option): Fix various issues by using
	placement new to initialize union member.
	* lib/Database.cpp (Database::createDatabase)
	(Database::loadDatabase Database::getDatabase): Add implementations.
	* lib/Driver.cpp: Added file, driver for the standalone tool.
	* lib/Framework.cpp (Framework::getDatabase): Return a
	std::unique_ptr<Database>.
	* lib/Main.cpp (main): Make db a unique_ptr<Database>.

2015-10-29  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Framework.h (Framework::loadMachineLearner):
	Return the UUID of the loaded machine learner.
	* include/mageec/TrainedML.h (TrainedML::getUUID): Added function.
	* include/mageec/Util.h (UUID): Added default copy/move constructors
	and assignment.
	(UUID::parse): Added method to parse a UUID from a canonical string.
	(Option): Fix copy/move constructors and assignment operators.
	* lib/Framework.cpp (Framework::loadMachineLearner): Return UUID.
	* lib/TrainedML.cpp (TrainedML::getUUID): Added implementation.

2015-10-21  Edward Jones  <ed.jones@embecosm.com>
	Reintroduce the GCC plugin, for feature extraction and pass gating.

	* CMakeLists.txt: Refactor, build libraries and add option to build
	plguin.
	* include/mageec/Feature.h (FeatureBase::print)
	(Feature::print): Added methods.
	* include/mageec/FeatureSet.h (FeatureSet::addFeature): rename to add.
	(FeatureSet::print): Added method.
	* include/mageec/Parameter.h (ParameterBase::print)
	(Parameter::print): Added methods.
	* include/mageec/ParameterSet.h (ParameterSet:addParameter): rename to add.
	(ParameterSet::print): Added method.
	* lib/Database.cpp (ResultIterator::operator*): Update addFeature/
	addParameter calls.

2015-10-01  Edward Jones  <ed.jones@embecosm.com>
	Added ability to train and retrieve results, updated various
	interfaces.

	* CMakeLists.txt: Define MAGEEC version macros.
	* include/mageec/Database.h (Database::newFeatureSet):
	Update feature argument.
	(Database::newParameterSet): Update parameter argument.
	(Database::trainMachineLearner): Remove return.
	(ResultIterator::ResultIterator): Remove unnecessary constructors.
	(ResultIterator::operator*): Wrap return in util::Option type.
	(ResultIterator::m_result_iter): Added private member.
	* include/mageec/Feature.h (Feature::fromBlob):
	Wrap return in std::unique_ptr, add 'name' argument.
	* include/mageec/FeatureSet.h (FeatureSet): Use std::shared_ptr
	for the features, add std::initializer_list constructor.
	* include/mageec/Framework.h: Check for version defines.
	* include/mageec/ML.h (IMachineLearner::makeDecision): Pass
	features by const reference.
	(IMachineLearner::trainMachineLearner): Rename method to 'train'.
	* include/mageec/Parameter.h (Parameter::fromBlob):
	Wrap return in std::unique_ptr, add 'name' argument.
	* include/mageec/ParameterSet.h (ParameterSet): Use std::shared_ptr
	for parameters, add std::initializer_list constructor.
	* include/mageec/TrainedML.h (TrainedML::makeDecision):
	Make 'features' argument a FeatureSet.
	* lib/Database.cpp (create_compilation_table): parameter_set_id
	may be NULL.
	(Database::trainMachineLearner): Added implemention.
	(ResultIterator): Likewise.
	* lib/Framework.cpp: Use version defines provided by build system.
	* lib/Main.cpp: use namespace mageec, update to match new interfaces.
	* lib/TrainedML.cpp (TrainedML::makeDecision): Added implementation.

2015-09-08  Edward Jones  <ed.jones@embecosm.com>
	Added functionality to create pass sequences and results in the
	database.

	* include/mageec/Database.h (Database::addPass): Make parameters
	an optional parameter.
	* include/mageec/Util.h (Option::Option): Added nullptr constructor.
	* lib/Database.cpp
	(create_pass_parameter_table): Removed, pass parameters are stored
	in the PassSequencePass table instead.
	(create_compilation_feature_table, create_result_table): Make
	all fields 'NOT NULL'.
	(Database::init_db): Create database in a single transaction.
	(Database::addFeaturesAfterPass): Added implementation.
	(Database::newPassSequence): Likewise.
	(Database::addPass): Likewise.
	(Database::addResult): Likewise.
	* lib/Main.cpp (main): Sanity check of new functionality.

2015-09-08  Edward Jones  <ed.jones@embecosm.com>

	* lib/Database.cpp (create_pass_sequence_table): Added sql query to
	create a new pass sequence table.
	(Database::init_db): Construct the new table.
	* lib/Main.cpp (main): More elaborate sanity check of implemented
	functionality.

2015-09-08  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt (CMAKE_CXX_FLAGS): Disable -Wweak-vtables warning.
	* include/mageec/DatabaseQuery.h
	(DatabaseQueryIterator::DatabaseQueryIterator): Add database handle
	parameter.
	(DatabaseQueryIterator::m_db): Add database handle member.
	* include/mageec/Feature.h
	(FeatureBase::~FeatureBase): Add destructor definition so that vtable
	is emitted.
	(Feature::toBlob): Mark override.
	* include/mageec/Parameter.h
	(ParameterBase::~ParameterBase): Added function.
	(ParameterBase::getName): Likewise.
	(ParameterBase::toBlob): Likewise.
	(ParameterBase::m_name): Added new member to store name for debug.
	(Parameter::~Parameter): Added destructor.
	(Parameter::toBlob): Added function.
	* lib/Database.cpp: Bug fixing of database.
	(create_feature_set_table): Added sql query, creates a new table.
	(create_feature_group_table): Likewise.
	(create_parameter_set_table): Likewise.
	(Database::init_db): Create the newly added tables.
	(Database::newParameterSet): Added implementation.
	* lib/DatabaseQuery.cpp: Pass database handle through to
	DatabaseQueryIterator. Add debug, and minor bug fixes.
	* lib/Main.cpp: Updated to experiment with new functionality.

2015-09-08  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/DatabaseQuery.h
	(DatabaseQueryIterator::isNull): Added method to check if a result
	column is of null type.
	(DatabaseQuery::operator<<): Add method to bind a null parameter.
	* lib/DatabaseQuery.cpp (DatabaseQueryIterator::isNull)
	(DatabaseQuery::operator<<): Added implementations.

2015-09-08  Edward Jones  <ed.jones@embecosm.com>

	* include/mageec/Database.h (Database::newCompilation): Added
	optional pass_sequence and parent parameters.
	* lib/Database.cpp (create_compilation_table): pass_sequence_id
	is optional (may be null).
	(Database::newCompilation): Added implementation.

2015-09-08  Edward Jones  <ed.jones@embecosm.com>
	Added further database functionality. The project now compiles a
	test program.

	* CMakeLists.txt: Added new source dependencies.
	(MAGEEC_DEBUG): Added option to toggle debug.
	(CMAKE_CXX_FLAGS): Disabled some unnecessary clang warnings.
	* include/mageec/Database.h: Fixed warnings.
	(Database::Database): Made mls const.
	(Database::m_mls): Made member const.
	(Database::getMetadata, Database::setMetadata): Made methods const.
	(Database::newFeatureSet, Database::newParameterSet): Made feature/
	parameter vector arguments const.
	* include/mageec/DatabaseQuery.h: Fixed warnings.
	(DatabaseQueryIterator::assertDone): Added function.
	(DatabaseQuery::m_db): Added member with handle to database.
	* include/mageec/Framework.h (Framework::getDatabase): Added create
	argument.
	(Framework::m_mls): Made m_mls const.
	* include/mageec/Util.h: Fixed warnings, added missing cassert include.
	* lib/Database.cpp: Fixed warnings and errors, added debug.
	(Database::newFeatureGroup): Added implementation.
	* lib/DatabaseQuery.cpp: Fixed warnings, added debug.
	(DatabaseQueryIterator::assertDone): Added function implementation.
	* lib/Framework.cpp: New file.
	* lib/Main.cpp: Likewise.
	* lib/TrainedML.cpp (makeDecision): Fixed function signature.

2015-09-04  Edward Jones  <ed.jones@embecosm.com>
	Beginning of implementation of database functionality.

	* CMakeLists.txt: Added target for testing, fixed CMAKE_CXX_FLAGS.
	* include/mageec/Database.h (Database::version): Added version number.
	(Database::~Database()): Added function.
	(Database::Database): Added bool 'create' argument.
	(Database::m_mls): Added member.
	(Database::init_db, Database::validate): Added functions.
	* include/mageec/DatabaseQuery.h: Added file
	(DatabaseQuery, DatabaseQueryBuilder)
	(DatabaseQueryIterator): New classes.
	* include/mageec/Feature.h (FeatureBase::~FeatureBase)
	(FeatureBase::getName, FeatureBase::toBlob): New functions.
	(FeatureBase::FeatureBase): Added 'name' arg.
	(FeatureBase::m_name): Added member.
	(Feature::~Feature, Feature::toBlob, Feature::fromBlob): New functions.
	* include/mageec/Framework.h (Framework::version): Added version.
	* include/mageec/TrainedML.h (TrainedML::TrainedML): Added blob
	argument.
	(TrainedML::makeDecision): Removed const.
	(TrainedML::m_metric, TrainedML::m_blob): Added members.
	* include/mageec/Util.h (Version::operator std::string): Added function.
	(UUID::operator==, UUID::operator!=): Added const.
	(UUID::m_data): Made member const.
	* lib/Database.cpp: Added placeholders for all functions.
	(Database::Database, Database::~Database, Database::~init_db)
	(Database::validate, Database::isCompatible, Database::getVersion)
	(Database::getMetadata, Database::setMetadata)
	(Database::getTrainedMachineLearners, Database::NewFeatureSet):
	Added initial implementations.
	* lib/DatabaseQuery.cpp: Added implementation of all functions.
	* lib/TrainedML.cpp: Added placeholders for all functions.

2015-09-02  Edward Jones  <ed.jones@embecosm.com>
	Added support for the cmake build system.

	* CMakeLists.txt: Added file.
	* doc/CMakeLists.txt: Likewise.
	* doc/Doxyfile.in: Added support for cmake.
	* doc/mageec-design.texi: Added file, work in progress design documentation.

2015-09-02  Edward Jones  <ed.jones@embecosm.com>
	Redesign of MAGEEC interfaces

	* AUTHORS: Updated authors.
	* INSTALL: Deleted.
	* Makefile.am: Likewise.
	* Makefile.in: Likewise.
	* NEWS: Likewise.
	* aclocal.m4: Likewise.
	* compile: Likewise.
	* config.guess: Likewise.
	* config.sub: Likewise.
	* configure: Likewise.
	* configure.ac: Likewise.
	* depcomp: Likewise.
	* doc/Makefile.am: Likewise.
	* doc/Makefile.in: Likewise.
	* doc/mageec.texi: Updated to reflect that cmake is now used.
	* doc/mdate-sh: Deleted.
	* gcc_plugin/Makefile.am: Likewise.
	* gcc_plugin/Makefile.in: Likewise.
	* gcc_plugin/feature-extract.cpp: Likewise.
	* gcc_plugin/gcc-callbacks.cpp: Likewise.
	* gcc_plugin/gcc-plugin.cpp: Likewise.
	* gcc_plugin/mageec-plugin.h: Likewise.
	* gcc_plugin/plugin-info.cpp: Likewise.
	* include/Makefile.am: Likewise.
	* include/Makefile.in: Likewise.
	* include/mageec/Database.h: Added file defining new MAGEEC interface.
	* include/mageec/Decision.h: Likewise.
	* include/mageec/Feature.h: Likewise.
	* include/mageec/FeatureSet.h: Likewise.
	* include/mageec/Framework.h: Likewise.
	* include/mageec/ML.h: Likewise.
	* include/mageec/Parameter.h: Likewise.
	* include/mageec/ParameterSet.h: Likewise.
	* include/mageec/Result.h: Likewise.
	* include/mageec/TrainedML.h: Likewise.
	* include/mageec/Types.h: Likewise.
	* include/mageec/Util.h: Likewise.
	* include/mageec/elfhash.h: Deleted.
	* include/mageec/mageec-db.h: Likewise.
	* include/mageec/mageec-decision.h: Likewise.
	* include/mageec/mageec-features.h: Likewise.
	* include/mageec/mageec-ml.h: Likewise.
	* include/mageec/mageec-passes.h: Likewise.
	* include/mageec/mageec-result.h: Likewise.
	* include/mageec/mageec.h: Likewise.
	* include/mageec/vectormath.h: Likewise.
	* install-sh: Likewise.
	* ltmain.sh: Likewise.
	* m4/ax_boost_base.m4: Likewise.
	* m4/ax_boost_python.m4: Likewise.
	* m4/ax_python_devel.m4: Likewise.
	* m4/libtool.m4: Likewise.
	* m4/ltoptions.m4: Likewise.
	* m4/ltsugar.m4: Likewise.
	* m4/ltversion.m4: Likewise.
	* m4/lt~obsolete.m4: Likewise.
	* mageec/Makefile.am: Likewise.
	* mageec/Makefile.in: Likewise.
	* mageec/dbtool.cpp: Likewise.
	* mageec/elfhash.cpp: Likewise.
	* mageec/features.cpp: Likewise.
	* mageec/hasher.cpp: Likewise.
	* mageec/mageec.cpp: Likewise.
	* mageec/mageechash.cpp: Likewise.
	* mageec/passes.cpp: Likewise.
	* mageec/python.cpp: Likewise.
	* missing: Likewise.
	* ml/C5/Makefile.am: Likewise.
	* ml/C5/Makefile.in: Likewise.
	* ml/C5/attwinnow.c: Likewise.
	* ml/C5/c50.c: Likewise.
	* ml/C5/classify-defns.h: Likewise.
	* ml/C5/classify-global.c: Likewise.
	* ml/C5/classify-hooks.c: Likewise.
	* ml/C5/classify-sample.c: Likewise.
	* ml/C5/classify.c: Likewise.
	* ml/C5/confmat.c: Likewise.
	* ml/C5/construct.c: Likewise.
	* ml/C5/contin.c: Likewise.
	* ml/C5/defns.i: Likewise.
	* ml/C5/discr.c: Likewise.
	* ml/C5/extern.i: Likewise.
	* ml/C5/formrules.c: Likewise.
	* ml/C5/formtree.c: Likewise.
	* ml/C5/getdata.c: Likewise.
	* ml/C5/getnames.c: Likewise.
	* ml/C5/global.c: Likewise.
	* ml/C5/gpl.txt: Likewise.
	* ml/C5/implicitatt.c: Likewise.
	* ml/C5/info.c: Likewise.
	* ml/C5/mcost.c: Likewise.
	* ml/C5/modelfiles.c: Likewise.
	* ml/C5/p-thresh.c: Likewise.
	* ml/C5/prune.c: Likewise.
	* ml/C5/report.c: Likewise.
	* ml/C5/rules.c: Likewise.
	* ml/C5/ruletree.c: Likewise.
	* ml/C5/siftrules.c: Likewise.
	* ml/C5/sort.c: Likewise.
	* ml/C5/subset.c: Likewise.
	* ml/C5/text.i: Likewise.
	* ml/C5/trees.c: Likewise.
	* ml/C5/update.c: Likewise.
	* ml/C5/utility.c: Likewise.
	* ml/C5/xval: Likewise.
	* ml/C5/xval.c: Likewise.
	* ml/Makefile.am: Likewise.
	* ml/Makefile.in: Likewise.
	* ml/database.cpp: Likewise.
	* ml/ml.cpp: Likewise.
	* testsuite/Makefile.am: Likewise.
	* testsuite/Makefile.in: Likewise.
	* testsuite/config/site.exp.in: Likewise.
	* testsuite/config/unix.exp: Likewise.
	* testsuite/gcc_plugin.tests/Makefile.am: Likewise.
	* testsuite/gcc_plugin.tests/Makefile.in: Likewise.
	* testsuite/gcc_plugin.tests/feature-extract.exp: Likewise.
	* testsuite/gcc_plugin.tests/main.c: Likewise.
	* testsuite/lib/mageec.exp: Likewise.
	* testsuite/mageec.tests/Makefile.am: Likewise.
	* testsuite/mageec.tests/Makefile.in: Likewise.
	* testsuite/mageec.tests/hash.exp: Likewise.
	* testsuite/mageec.tests/test.elf: Likewise.
	* testsuite/python.tests/Makefile.am: Likewise.
	* testsuite/python.tests/Makefile.in: Likewise.
	* testsuite/python.tests/hash.py: Likewise.
	* testsuite/python.tests/test-python.exp: Likewise.
	* testsuite/python.tests/test.elf: Likewise.
	* testsuite/python.tests/test.py: Likewise.

2014-08-05  James Pallister  <james.pallister@bristol.ac.uk>
	Fix #4,  GCC plugin segfaults when a call does not have a LHS value.

	* gcc_plugin/feature-extract.cpp: Check whether the LHS is a valid
	    pointer before dereferencing.

2014-08-05  James Pallister  <james.pallister@bristol.ac.uk>
	Fix divide by zero in the feature extractor

	* gcc_plugin/feature-extract.cpp: Fix divide by zero if bb_count is
	    zero

2014-08-01  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-callbacks.cpp (mageec_pass_gate): Replace fprintf
	calls using result to use %i instead %hhi.
	* include/mageec/elfhash.h (hashedelf): Change type of data to
	unsigned char *.
	Add newline to end of file.
	* include/mageec/mageec-decision.h (enum decision): Add newline to
	end of file.
	* include/mageec/mageec-features.h: Add newline to end of file.
	(mageec_feature): Add virtual destructor.
	(class basic_feature): Add extra int to avoid padding warning.
	* include/mageec/mageec-ml.h (mageec_ml): Rename passes to
	known_passes.
	Add virtual destructor.
	(mageec_ml::raw_result): Correct @param comment.
	* include/mageec/mageec-passes.h: Add newline to end of file.
	(mageec_pass): Add virtual destructor.
	* include/mageec/mageec-result.h: Add newline to end of file.
	* include/mageec/mageec.h (hash_data): Change type of size
	parameter to unsigned long.
	* mageec/elfhash.cpp (hashedelf::hash): Remove #pragma GCC.
	static_cast realloc calls.
	* mageec/features.cpp (pad_string): Change type of length to
	long long.
	(dump_vector): Change type of variables that hold vector sizes
	to unsigned long.
	(mageec_feature::~mageec_feature): Added default destructor
	to avoid weak vtables.
	* mageec/hasher.cpp: Add newline to end of file.
	(hash_data): Change type of size parameter to unsigned long.
	Change casting for finalhash to static_cast.
	* mageec/mageechash.cpp: Add newline to end of file.
	* mageec/passes.cpp: Add newline to end of file.
	(mageec_pass::~mageec_pass): Added default destructor to avoid
	weak vtables.
	* ml/C5/Makefile.am: Override parent CFLAGS to remove -Werror.
	* ml/C5/Makefile.in: Regenerated.
	* ml/database.cpp (database::get_pass_list): Change cast of
	const char* to reinterpret_cast.
	(database::add_result): Change type of iterator variable to
	unsigned long.
	Change cast of long long to static_cast<int64_t>.
	(database::get_all_results): Change cast of const char* to
	reinterpret_cast.
	Change building of result object to be C++ compliant.
	(const char *database::get_pass_blob): Change cast of char* to
	reinterpret_cast.
	* ml/ml.cpp (mageec_ml::init): Rename passes to known_passes.
	(mageec_ml::all_passes): Likewise.
	(mageec_ml::add_result): Change building of result object to be
	C++ compliant.
	(mageec_ml::make_decision): Change type of iterator variable to
	unsigned long.
	(mageec_ml::process_results): Likewise.
	Rename passes to known_passes.
	Change cast of popen to static_cast<FILE *>.
	(file_ml::init): Mark pass_file as const.
	Change cast of string to use static_cast.
	(file_ml::make_decision): Change type of iterator variable and
	vector length to unsigned long.

2014-08-01  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/feature-extract.cpp (mageec_featextract_exec): Add
	missing features ft16, ft17, ft18, ft19, ft20, ft22, ft23, ft35,
	ft39, ft42, ft43, ft44, ft45, ft46.

2014-07-29  Simon Cook  <simon.cook@embecosm.com>

	* doc/Makefile.in: Regenerated
	* gcc_plugin/feature-extract.cpp: Replace uses of GCC_MINOR with
	GCC_VERSION.
	Fix GCC 4.8 headers.
	* mageec/Makefile.am: Link with libmageec_learner before libmageec.
	* mageec/Makefile.in: Regenerated.

2014-07-11  Simon Cook  <simon.cook@embecosm.com>

	* ml/database.cpp (qinit3): Make prog field in features TEXT.
	(qinit4): Remove invalid foreign key constraint.
	(get_all_results): Only select results with the lowest energy.
	Correct mprintf for feature set selection to use %Q instead of %s.

2014-07-11  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/feature-extract.cpp: Use bversion.h to determine version.
	Removed plugin-version.h from includes.
	* gcc_plugin/Makefile.am: Build with -fno-rtti.
	* gcc_plugin/Makefile.in: Regenerated.

2014-07-09  Simon Cook  <simon.cook@embecosm.com>

	* include/mageec/mageec-ml.h (mageec_ml::init): Add path to database
	virtual init function.
	(class file_ml): Likewise.
	* mageec/Makefile.am: Add rules for building mageecdb
	* mageec/Makefile.in: Regenerated.
	* mageec/dbtool.cpp: Add initial database management tool.
	* ml/ml.cpp (mageec_ml::init): Add path to database function. Modified
	COMPILER, VERSION init function to use this instead.
	(file_ml::init): Likewise.

2014-07-07  Simon Cook  <simon.cook@embecosm.com>

	* configure.ac: Make test for GCC headers using a C++ compiler instead
	of C.
	* configure: Regenerated.

2014-07-07  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/feature-extract.cpp: Added conditional includes for GCC
	4.9 and above.
	(mageec_featextract_exec): Replace FOR_EACH_BB with FOR_ALL_BB_FN for
	GCC 4.9 and above.
	(pass_data_mageec_featextract): Added for GCC 4.9 and above.
	(class mageec_featpass): Likewise.
	(make_mageec_pass): Likewise.
	(register_featextract): Update pass reference depending on GCC 4.9.

2014-07-07  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-callbacks.cpp (mageec_pass_gate): Use mageec_config
	map for configuration instead of larger set of globals.
	* gcc_plugin/gcc-plugin.cpp (parse_arguments): Likewise.
	* gcc_plugin/mageec-plugin.h (mageec_print_pass_info): Removed,
	replaced with mageec_config.
	(mageec_no_decision): Removed, replaced with mageec_config.
	(mageec_config): Added.

2014-04-08  James Pallister  <james.pallister@bristol.ac.uk>
	Add an install-exec-hook to symlink the library into the plugins dir.
	This allows "gcc -fplugin=mageec" to work.

	* gcc_plugin/Makefile.am: Added an install-exec-hook and a uninstall-
	    hook to add and remove symlinks to the mageec gcc plugin
	* gcc_plugin/Makefile.in: Regenerated

2014-04-08  James Pallister  <james.pallister@bristol.ac.uk>
	Make check fix for when not enabling python

	* testsuite/config/site.exp.in: Quote @PYTHON@ so if it is not defined
	    make check does not fail

2014-04-08  James Pallister  <james.pallister@bristol.ac.uk>
	Conditionally enable gcc_plugin tests and python tests based on
	--enable-XXX flags given to configure

	* testsuite/Makefile.am: Added automake conditional declarations for
	    the gcc_plugin and python tests
	* testsuite/Makefile.in: Regenerated

2014-04-07  Simon Cook  <simon.cook@embecosm.com>

	* configure.ac: Make output formatting of enable python and gcc
	more suited to surrounding options.
	* configure: Regenerated.

2014-04-07  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/Makefile.am: Build GCC Plugin only if
	ENABLE_GCC_PLUGIN is set.
	* gcc_plugin/Makefile.in: Regenerated.
	* configure.ac: Add configure flag to disable GCC plugin.
	* configure: Regenerated.

2014-04-07  Simon Cook  <simon.cook@embecosm.com>

	* doc/mageec.texi: Remove references to unknown VERSION, UPDATED.

2014-04-06  Pierre Langlois  <pierre.langlois@embecosm.com>

	* testsuite/gcc_plugin.tests/feature-extract.exp: Use a regular
	expression to match features.

2014-04-06  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/feature-extact.cpp (mageec_featextract_exec): Don't
	print out feature vector manually, use new printing interface.
	* include/mageec/mageec-features.h (mageec_feature): Add description
	member, with getter and constructor to use the new member.
	* mageec/features.cpp (pad_string): Add static string pad function.
	(mageec_feature::dump_vector): Add plain text/JSON feature vector
	printer.
	(mageec_feature::mageec_feature): Add constructor which utilizes
	new description member.

2014-04-06  Simon Cook  <simon.cook@embecosm.com>

	* compile: Add compile file, replacing symblink.

2014-04-03  Pierre Langlois  <pierre.langlois@embecosm.com>

	* testsuite/config/site.exp.in: Add python variable.
	* testsuite/python.tests/test-python.exp: Allow the tests to run
	without installing.

2014-04-03  James Pallister  <james.pallister@bristol.ac.uk>
	Fail the configure process if boost is not found

	* configure: Regenerated
	* configure.ac: Fail the configure process if boost is not found,
	    instead of continuing anyway

2014-04-03  James Pallister  <james.pallister@bristol.ac.uk>
	Disabled maintainer mode.

	* Makefile.in: Regenerated
	* aclocal.m4: Regenerated
	* configure: Regenerated
	* configure.ac: Disabled maintainer mode. When doing a fresh git
	    clone, the autotools thinks that configure is older than
	    configure.ac, so attempts to recreate it.
	* doc/Makefile.in: Regenerated
	* gcc_plugin/Makefile.in: Regenerated
	* include/Makefile.in: Regenerated
	* mageec/Makefile.in: Regenerated
	* ml/C5/Makefile.in: Regenerated
	* ml/Makefile.in: Regenerated
	* testsuite/Makefile.in: Regenerated
	* testsuite/gcc_plugin.tests/Makefile.in: Regenerated
	* testsuite/mageec.tests/Makefile.in: Regenerated
	* testsuite/python.tests/Makefile.in: Regenerated

2014-04-03  James Pallister  <james.pallister@bristol.ac.uk>
	Use the site python module to find out where the install directory
	should be.

	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Create a PYTHON_PACKAGES variable describing where the
	    packages should be put
	* doc/Makefile.in: Regenerated
	* gcc_plugin/Makefile.in: Regenerated
	* include/Makefile.in: Regenerated
	* mageec/Makefile.am: Use the new PYTHON_PACKAGES variable as the
	    symlink destination for the module
	* mageec/Makefile.in: Regenerated
	* ml/C5/Makefile.in: Regenerated
	* ml/Makefile.in: Regenerated
	* testsuite/Makefile.in: Regenerated
	* testsuite/gcc_plugin.tests/Makefile.in: Regenerated
	* testsuite/mageec.tests/Makefile.in: Regenerated
	* testsuite/python.tests/Makefile.in: Regenerated

2014-04-03  James Pallister  <james.pallister@bristol.ac.uk>
	Added tests for the python module. Check the ability to import the
	module, and the functionality of hashedelf.

	* configure: Regenerated
	* configure.ac: Generate additional python tests
	* testsuite/Makefile.am: Generate additional python tests
	* testsuite/Makefile.in: Regenerated
	* testsuite/python.tests/Makefile.am: Distribute python test files
	* testsuite/python.tests/Makefile.in: Regenerated
	* testsuite/python.tests/hash.py: Display the hash of an elf file
	* testsuite/python.tests/test-python.exp: Tests for importing and
	    hashedelf
	* testsuite/python.tests/test.elf: Test elf file, copied from
	    mageec.tests
	* testsuite/python.tests/test.py: Display the return code from
	    hashedelf.hash

2014-04-02  James Pallister  <james.pallister@bristol.ac.uk>
	Manually find the site packages directory, because on some systems the
	prefix is incorrectly set to /usr/local

	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Create a PYTHON_SITEPACKAGES variable to tell make
	    where to put the mageec module
	* doc/Makefile.in: Regenerated
	* gcc_plugin/Makefile.in: Regenerated
	* include/Makefile.in: Regenerated
	* mageec/Makefile.am: Change the install hooks to place library
	    correctly
	* mageec/Makefile.in: Regenerated
	* ml/C5/Makefile.in: Regenerated
	* ml/Makefile.in: Regenerated
	* testsuite/Makefile.in: Regenerated
	* testsuite/gcc_plugin.tests/Makefile.in: Regenerated
	* testsuite/mageec.tests/Makefile.in: Regenerated

2014-04-02  James Pallister  <james.pallister@bristol.ac.uk>
	Fix: install the python module in the correct directory

	* mageec/Makefile.am: Use pyexecdir for location of the python modules
	    instead
	* mageec/Makefile.in: Regenerated

2014-04-02  James Pallister  <james.pallister@bristol.ac.uk>
	Added missing compile file, added by automake 1.14

	* compile: Added missing compile file, added by automake 1.14

2014-04-02  James Pallister  <james.pallister@bristol.ac.uk>
	Added subdir-objs to automake options

	* configure.ac: Added subdir-objs to automake options
	* gcc_plugin/Makefile.in: Regenerated
	* mageec/Makefile.in: Regenerated
	* ml/C5/Makefile.in: Regenerated
	* ml/Makefile.in: Regenerated
	* testsuite/gcc_plugin.tests/Makefile.in: Regenerated

2014-04-02  Pierre Langlois  <pierre.langlois@embecosm.com>

	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* configure.ac: Add gcc_plugin.tests/Makefile and config/site.exp to
	AC_OUTPUT.
	* testsuite/Makefile.am: Set config/site.exp as a configuration file.
	Add gcc_plugin as a second tool to seperate gcc specific test from
	mageec tests.
	* testsuite/Makefile.in: Regenerate.
	* testsuite/config/site.exp.in: New file. Configuration to pass to the
	tests.
	* testsuite/gcc_plugin.tests/Makefile.am: New file.
	* testsuite/gcc_plugin.tests/Makefile.in: New file, generate.
	* testsuite/gcc_plugin.tests/feature-extract.exp: New test file. Checks
	that features are extracted from compiling an empty source file.
	* testsuite/gcc_plugin.tests/main.c: New empty source file.

2014-04-02  James Pallister  <james.pallister@bristol.ac.uk>
	Added auxiliary m4 files for boost and python detections

	* m4/ax_boost_base.m4: Detection script for boost
	* m4/ax_boost_python.m4: Detection script for boost python
	* m4/ax_python_devel.m4: Detection script for python

2014-04-02  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/feature-extract.cpp (mageec_featextract_exec):
	Correctly store number of statements instead of block count as
	instruction count features.

2014-03-29  James Pallister  <james.pallister@bristol.ac.uk>
	Added support for using the library as a python module

	* Makefile.in: Regenerated
	* aclocal.m4: Regenerated
	* configure: Regenerated
	* configure.ac: Add the --enable-python options, and check for python
	    development headers and boost python
	* doc/Makefile.in: Regenerated
	* gcc_plugin/Makefile.in: Regenerated
	* include/Makefile.in: Regenerated
	* mageec/Makefile.am: Conditionally compile in python.cpp if
	    --enable-python is given to configure. Add install hooks to
	    symlink the library into python dist- packages, so python scripts
	    can use it
	* mageec/Makefile.in: Regenerated
	* mageec/python.cpp: Initial python module file. Support for the
	    hashedelf class only
	* ml/C5/Makefile.in: Regenerated
	* ml/Makefile.in: Regenerated
	* testsuite/Makefile.in: Regenerated
	* testsuite/mageec.tests/Makefile.in: Regenerated

2014-03-20  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-callbacks.cpp (mageec_pass_gate): Add flag to
	only print out MAGEEC's decision if it overrides the compiler.

2014-03-18  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plguin/feature-extract.cpp (mageec_featextract_exec): Add
	feature extractor support for counting switch statements and
	unary ops.

2014-03-18  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-plugin.cpp (mageec_featextract_exec): Add support
	for phi counting features.

2014-03-18  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-plugin.cpp (mageec_featextract_exec): Add support
	for predecessor/successor counting features.

2014-03-07  James Pallister  <james.pallister@embecosm.com>

	* configure.ac: Fixed check for gcc-plugin headers.
	* configure: Regenerated.

2014-03-07  James Pallister  <james.pallister@embecosm.com>

	* configure.ac: Added check for gcc-plugin headers.
	* configure: Regenerated.

2014-03-04  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-plguin.cpp (parse_arguments): Add warning for unknown
	options.

2014-03-04  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/feature-extract.cpp: Added use of vector_math.h.
	(vector_min): Removed.
	(vector_max): Removed.
	(vector_sum): Removed.
	* include/vector_math.h: Add vector functions from GCC feature
	extractor.
	* include/Makefile.am: Add vectormath.h to installed headers.
	* include/Makefile.in: Regenerated.

2014-02-13  Simon Cook  <simon.cook@embecosm.com>

	* include/mageec/mageec-ml.h (mageec_ml::init): Mark as virtual.
	(mageec_ml::make_decision): Likewise.
	(file_ml): Define class for file-based pass control.
	* include/mageec/mageec.h (mageec_framework): Add selection of
	mageec_ml or file_ml as machine learner based on definition of
	MAGEEC_FILEML.
	* ml/ml.cpp (file_ml::init): Store string list of passes to execute
	based on executelist file.
	(file_ml::make_decision): Make execute/don't execute decision based on
	previously loaded execute list.

2014-02-11  Simon Cook  <simon.cook@embecosm.com>

	* ml/ml.cpp (mageec_ml::finish): Only delete database object if it
	exists.

2014-02-11  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/feature-extract.cpp (mageec_featextract_exec): Build
	feature vector and pass to MAGEEC storage layer.
	* gcc_plugin/gcc-callbacks.cpp (mageec_pass_gate): Make decision
	on executing pass based on previously stored features.
	* gcc_plugin/gcc-plugin.cpp (void parse_arguments): Add parsing for
	'nodecide' argument to disable decision making.
	* gcc_plugin/mageec-plugin.h (mageec_no_decision): Add parameter for
	disabling decision making.
	* include/mageec/mageec-db.h (get_pass_blob): Defined.
	* include/mageec/mageec-decision.h: Add header for decision state.
	* include/mageec/mageec-ml.h (mageec_framework::make_decision):
	Defined.
	* include/mageec/mageec.h (mageec_framework::featset): Add feature
	vector storage.
	(mageec_framework::take_features): Defined to add to feature storage.
	(mageec_framework::make_decision): Defined for decision making.
	* include/Makefile.am: Add mageec/mageec-decision.h to headers.
	* include/Makefile.in: Regenerated.
	* mageec/mageec.cpp (mageec_framework::new_file): Clear feature store.
	(mageec_framework::end_file): Clear feature store.
	(mageec_framework::take_features): Store given features in store.
	(mageec_framework::make_decision): Pass stored features to ML layer.
	* mageec/Makefile.am: Link mageechash against libmageec_learner.
	* mageec/Makefile.in: Regenerated.
	* ml/database.cpp (database::store_pass_blob): Return blob (decision
	tree) if one has been previously stored.
	* ml/ml.cpp: Add C linkage reference to c5_classify_main.
	(mageec_ml::make_decision): Restore decision tree information stored
	in database and use given features to make decision via
	c5_classify_main.

2014-02-11  Simon Cook  <simon.cook@embecosm.com>

	* ml/C5/classify-hooks.c (FreeGlobals): Removed freeing of PropVal, as
	inclusion in library causes free to abort.
	* ml/C5/classify-sample.c (main): Renamed to c5_classify_main.
	(c5_classify_main): Removed printfs, now returns whether test
	was classified as "t"/run pass.

2014-02-11  Simon Cook  <simon.cook@embecosm.com>

	* ml/C5/classify-defns.h, ml/C5/classify-global.c,
	ml/C5/classify-hooks.c, ml/C5/classify-sample.c: Add sample public
	RuleQuest C5 code.
	* ml/Makefile.am: add C5/classify-sample.c to ML library.
	* ml/Makefile.in: Regenerated.

2014-02-11  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-callbacks.cpp: Removed comment about executing
	pass directly.

2014-01-21  Simon Cook  <simon.cook@embecosm.com>

	* include/elfhash.h: Renamed to include/mageec/elfhash.h.
	* include/mageec-db.h: Renamed to include/mageec/mageec-db.h
	* include/mageec-features.h: Renamed to
	include/mageec/mageec-features.h
	* include/mageec-ml.h: Renamed to include/mageec/mageec-ml.h.
	* include/mageec-passes.h: Renamed to include/mageec/mageec-passes.h.
	* include/mageec-result.h: Renamed to include/mageec/mageec-result.h.
	* include/mageec.h: Renamed to include/mageec/mageec.h.
	* gcc_plugin/gcc-callbacks.cpp: Update include references.
	* gcc_plugin/gcc-plugin.cpp: Likewise.
	* gcc_plugin/mageec-plugin.h: Likewise.
	* mageec/elfhash.cpp: Likewise.
	* mageec/elfhash.cpp: Likewise.
	* mageec/features.cpp: Likewise.
	* mageec/hasher.cpp: Likewise.
	* mageec/mageec.cpp: Likewise.
	* mageec/mageechash.cpp: Likewise.
	* mageec/passes.cpp: Likewise.
	* ml/database.cpp: Likewise.
	* ml/ml.cpp: Likewise.
	* include/Makefile.am: Added rule to install headers.
	* include/Makefile.in: Generated.
	* Makefile.am: Add include subdirectory and update include references.
	* Makefile.in: Regenerated.
	* configure.ac: Add generation of include/Makefile.
	* configure: Regenerated.

2014-01-21  Simon Cook  <simon.cook@embecosm.com>

	* doc/mageec.texi: Add build instructions.

2013-11-26  Simon Cook  <simon.cook@embecosm.com>

	* include/mageec-db.h (get_all_results): Added.
	(store_pass_blob): Likewise.
	* include/mageec-features.h (basic_feature): Added string, int
	constructor.
	* include/mageec-result.h (result): Added featlist.
	* mageec/features.cpp (basic_feature): Added string, int constructor.
	(basic_feature::get_feature): Return correct feature value.
	* ml/database.cpp (initdb): Add feature and passblob tables.
	(get_all_results): Add function to return all compiled data known to
	database.
	* ml/ml.cpp (add_result): Store feature list in result object.
	(process_results): Generate files for C5.0 to machine learn passes.
	* ml/Makefile.am: Add passing libexec dir to compiler.
	* ml/Makefile.in: Regenerated.

2013-11-26  Simon Cook  <simon.cook@embecosm.com>

	* ml/C5/attwinnow.c, ml/C5/c50.c, ml/C5/classify.c, ml/C5/confmat.c,
	ml/C5/construct.c, ml/C5/contin.c, ml/C5/defns.i, ml/C5/discr.c,
	ml/C5/extern.i, ml/C5/formrules.c, ml/C5/formtree.c, ml/C5/getdata.c,
	ml/C5/getnames.c, ml/C5/global.c, ml/C5/gpl.txt, ml/C5/implicitatt.c,
	ml/C5/info.c, ml/C5/mcost.c, ml/C5/modelfiles.c, ml/C5/prune.c,
	ml/C5/p-thresh.c, ml/C5/report.c, ml/C5/rules.c, ml/C5/ruletree.c,
	ml/C5/siftrules.c, ml/C5/sort.c, ml/C5/subset.c, ml/C5/text.i,
	ml/C5/trees.c, ml/C5/update.c, ml/C5/utility.c, ml/C5/xval,
	ml/C5/xval.c: Add source files from GPL C5.0 Release 2.07.
	* ml/C5/Makefile.am: Build C5.0 executable.
	* ml/C5/Makefile.in: Generate.
	* ml/Makefile.am: Add C5 subdirectory.
	* ml/Makefile.in: Regenerated.
	* configure.ac: Add generation of ml/C5/Makefile
	* configure: Regenerated.

2013-10-28  Simon Cook  <simon.cook@embecosm.com>

	* doc/Makefile.am: Add mageec.texi for documentation.
	* doc/Makefile.in: Generated.
	* doc/fdl-1.3.texi: Add GFDL 1.3.
	* doc/mdate-sh, doc/texinfo.texi: Add build infrastructure.
	* doc/mageec.texi: Add initial documentation.
	* .gitignore: Ignore .log files.
	* Makefile.am: Build in doc subdirectory.
	* Makefile.in: Rengerated.
	* configure.ac: Generate doc/Makefile.
	* configure: Regenerated.

2013-10-25  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-callbacks.cpp (pass_type_str): Define pass to type
	conversion function.
	(mageec_pass_gate): Print pass information on gate override.
	* gcc_plugin/gcc-plugin.cpp (parse_arguments): Remove
	dumppasses=disable option.
	(plugin_init): Register mageec_pass_gate as PLUGIN_OVERRIDE_GATE.
	Remove use of disable_pass.
	* gcc_plugin/mageec-plugin.h (mageec_gcc_pass_info): Removed.
	(mageec_pass_gate): Declared.
	* gcc_plugin/plugin-info.cpp (mageec_gcc_pass_info): Removed.

2013-10-24  Simon Cook  <simon.cook@embecosm.com>

	* include/mageec-passes.h: Fix include guard.

2013-10-23  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/feature-extract.cpp: Define basic feature extractor.
	* gcc_plugin/gcc-plugin.cpp: Register feature extractor on launch.
	* gcc_plugin/mageec-plugin.h: Add register_featextract.
	* gcc_plugin/Makefile.am: Added feature-extract.cpp to libmageec_gcc.
	* gcc_plugin/Makefile.in: Regenerated.

2013-10-22  Simon Cook  <simon.cook@embecosm.com>

	* include/mageec-db.h (add_result): Add support for adding result to
	database.
	* include/mageec-ml.h (add_result): Add result struct based variant.
	* include/mageec-result.h (result): Create structure for holding
	machine learning result data.
	* include/mageec.h (hash_data): Add global hash function.
	* mageec/Makefile.am: Add hasher.cpp to libmageec.
	* mageec/Makefile.in: Regenerated.
	* mageec/elfhash.cpp: Use hash_data instead of built in hash.
	* ml/database.cpp (initdb): Create passorder and result tables.
	(add_result): Add storage for result structure.
	* ml/ml.cpp (add_result): Convert to result structure and add to
	database.

2013-10-22  Simon Cook  <simon.cook@embecosm.com>

	* ml/Makefile.am: Readd -Werror to flags.
	* ml/Makefile.in: Regenerated.

2013-10-21  Simon Cook  <simon.cook@embecosm.com>

	* mageec/flags.cpp, include/mageec-flags.h: Rename to:
	* mageec/passes.cpp, include/mageec-passes.h.
	* include/mageec-ml.h: Update references to headers.
	* include/mageec-passes.h (mageec_flag): Renamed to mageec_pass.
	(basic_flag): Renamed to basic_pass.
	* mageec/passes.cpp: Likewise.
	* gcc_plugin/gcc_plugin.cpp (plugin_init): Update references to
	new pass class names.
	* include/mageec.h, mageec/mageec.cpp (mageec_framework::all_flags):
	Renamed to all_passes, updated references to new class names.
	* include/mageec-ml.h, ml/ml.cpp (mageec_ml::all_flags): Likewise.
	* include/mageec-db.h (get_flag_list): Renamed to get_pass_list, update
	references to new class names.
	* ml/database.cpp: Likewise.

2013-10-21  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-plugin.cpp (plugin_init): Disable all passes provided
	by database on launch.
	* include/mageec-db.h (mageec::database): Declared first database
	interface.
	* include/mageec-features.h (mageec_feature): Mark name virtual.
	(basic_feature): Implement basic mageec_feature.
	* include/mageec-flags.h (mageec_flag::get_feature): Rename to value().
	(basic_flag): Implement boolean flag.
	* include/mageec-ml.h (mageec_ml): Add private database and flag list.
	(mageec_ml::all_flags): Declared.
	* include/mageec.h (mageec_framework::all_flags): Declared.
	* mageec/mageec.cpp (mageec_framework::all_flags): Defined to call list
	of flags known to machine learner.
	* mageec/features.cpp (basic_feature): Added basic feature definition.
	* mageec/flags.cpp (basic_flag): Added basic flag definition.
	* mageec/Makefile.am: Add features.cpp, flags.cpp to libmageec.
	* mageec/Makefile.in: Regenerated.
	* ml/database.cpp (database): Defined initial MAGEEC pass list
	database.
	* ml/ml.cpp (mageec_ml::init): Load database and pass list on
	initilisation.
	(mageec_ml::finish): Delete database on plugin unload.
	(mageec_ml::all_flags): Returns flag list.
	* ml/Makefile.am: Add database.cpp to libmageec_learner.
	* ml/Makefile.in: Regnerated.
	* configure.ac: Add checks for SQlite3.
	* configure: Regenerated.

2013-10-18  Simon Cook  <simon.cook@embecosm.com>

	* mageec/mageec.cpp (mageec_framework::init): Pass on compiler_version
	and compiler_target instead of empty strings.

2013-10-18  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-callbacks.cpp (mageec_gcc_finish): Stream info/debug
	info out to stderr.
	(mageec_gcc_start_file): Likewise.
	(mageec_gcc_finish_file): Likewise.
	* gcc_plugin/plugin-info.cpp (mageec_gcc_pass_info): Likewise.
	(mageec_gcc_plugin_info): Likewise.
	* mageec/mageec.cpp (mageec_framework::init): Make use of std namespace
	consistent.
	(mageec_framework::new_file): Likewise.
	(mageec_framework::end_file): Likewise.
	(mageec_framework::finish): Likewise.
	* mageec/mageechash.cpp (main): Likewise.
	* ml/ml.cpp (mageec_ml::init): Likewise.
	(mageec_ml::new_file): Likewise.
	(mageec_ml::end_file): Likewise.
	(mageec_ml::finish): Likewise.

2013-10-18  Simon Cook  <simon.cook@embecosm.com>

	* gcc_plugin/gcc-plugin.cpp (parse_arguments): Added runtime arguments
	for printing plugin and pass information.
	(plugin_init): Print plugin and pass information only if requested.
	* gcc_plugin/mageec-plugin.h (mageec_gcc_pass_info): Declared.
	* gcc_plugin/plugin-info.cpp (mageec_gcc_pass_info): Added function
	to print passes internal to GCC and attempts to disable all.

2013-09-11  Simon Cook  <simon.cook@embecosm.com>

	* include/elfhash.h (hashedelf): Removed verbose member and from
	constructor.
	* mageec/elfhash.cpp (hashedelf::hashedelf): Removed verbose from
	constructor.
	* mageec/mageechash.cpp (main): Update usage of hashedelf.

2013-09-11  Simon Cook  <simon.cook@embecosm.com>

	* testsuite/Makefile.am: Initilize DejaGnu based test suite.
	* testsuite/Makefile.in: Generated.
	* testsuite/config/unix.exp: Added blank tool config file.
	* testsuite/lib/mageec.exp: Added blank tool init file.
	* testsuite/mageec.tests/Makefile.am: Add test to distribution.
	* testsuite/mageec.tests/Makefile.in: Generated.
	* testsuite/mageec.tests/hash.exp: Add mageechash tests.
	* testsuite/mageec.tests/test.elf: Add test known ELF executable.
	* configure.ac: Add testsuite Makefiles to AC_OUTPUT.
	* configure: Regenerated.
	* Makefile.am: Add testsuite subdirectory.
	* Makefile.in: Regenerated.

2013-09-11  Simon Cook  <simon.cook@embecosm.com>

	* include/mageec-ml.h: Finish machine learner interface.

2013-09-03  Simon Cook  <simon.cook@embecosm.com>

	* mageec/mageechash.cpp (main): Only display hash output if no error
	generating hash.

2013-08-21  James Pallister  <james.pallister@embecosm.com>

	* include/mageec-ml.h (add_result): Correct use of mageec_feature,
	mageec_flag.
	* ml/ml.c (add_result): Likewise.

2013-08-21  Simon Cook  <simon.cook@embecosm.com>

	* include/elfhash.h: Define hashedelf::ignoredsection.
	* include/elfhash.cpp: Likewise.

2013-08-21  Simon Cook  <simon.cook@embecosm.com>

	* include/elfhash.h: Define hashedelf.
	* mageec/elfhash.cpp: Define hashedelf class implementation.
	* mageec/mageechash.cpp: Added command line interface to hashedelf.
	* mageec/Makefile.am: Build mageechash, add elfhash to libmageec.
	* mageec/Makefile.in: Regenerated.
	* Makefile.am: Include elfhash.h with distribution.
	* Makefile.in: Regenerated.
	* configure.ac: Add test for libelf and libgcrypt.
	* configure: Regenerated.

2013-08-14  Simon Cook  <simon.cook@embecosm.com>

	* doc/Doxyfile.in: Add Doxygen documentation.
	* doc/mageec_logo.png: Add logo for Doxygen documentation.
	* gcc_plugin/gcc-callbacks.cpp: Add placeholder GCC Plugin callbacks.
	* gcc_plugin/gcc-plugin.cpp: Initial plugin.
	* gcc_plugin/mageec-plugin.h: Add header for GCC plugin.
	* gcc_plugin/plugin-info.cpp: Add printout for GCC/Plugin information.
	* gcc_plugin/Makefile.am: Added.
	* gcc_plugin/Makefile.in: Generated.
	* include/mageec-features.h: Add initial work on feature class.
	* include/mageec-flags.h: Add initial work on flag class.
	* include/mageec-ml.h: Add initial interface for machine learner.
	* include/mageec.h: Add initial MAGEEC interface.
	* mageec/mageec.cpp: Add initial MAGEEC class implementation.
	* mageec/Makefile.am: Added.
	* mageec/Makefile.in: Generated.
	* ml/ml.cpp: Add inital machine learner class implementation.
	* ml/Makefile.am: Added.
	* ml/Makefile.in: Generated.
	* AUTHORS, COPYING, INSTALL, NEWS, m4/, aclocal.m4, config.guess,
	config.sub, depcomp, install-sh, ltmain.sh, missing: Add build
	infrastructure.
	* README: Add project introduction readme.
	* Makefile.am: Added.
	* Makefile.in: Generated.
	* configure.ac: Added.
	* configure: Generated.
	* .gitignore: Add initial list of files to ignore.
