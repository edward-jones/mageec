2015-10-30  Edward Jones  <ed.jones@embecosm.com>

	* CMakeLists.txt: Link target against mageec_lib instead of mageec
	as the library target has been renamed.
	* FeatureExtract.cpp: Save extracted features in the database.
	* GCCPlugin.cpp (parseArguments): with_save_features now set
	correctly when save_features flag is provided.
	mageec_context.database is now initialized correctly.

2015-10-29  Edward Jones  <ed.jones@embecosm.com>

	* FeatureExtract.cpp: Replace mageec_config with mageec_context.
	* GCCCallbacks.cpp: Use mageec_context to hold plugin state, use
	MAGEEC_MSG/MAGEEC_ERR/MAGEEC_WARN macros for debug output. Do not
	import the mageec namespace.
	* GCCPlugin.cpp: General refactor, replace mageec_framework/mageec_ml/
	mageec_config globals with a single mageec_context. Improved error
	handling throughout.
	(parseArguments): More complex handling of 'debug' option.
	Removed 'no_decision' option. Added 'mode', 'machine_learner',
	'database' and 'save_features' options.
	(plugin_init): Initialize the framework.
	* MAGEECPlugin.h (mageecDbg): Added function to retrive debug stream.
	(MAGEEC_PREFIX): Prefix for output messages
	(MAGEEC_MSG, MAGEEC_WARN, MAGEEC_ERR): Macros to print status.
	(MAGEECMode): Added enum of modes for the plugin.
	(MAGEECContext): Added structure to hold global data for the plugin.
	(mageec_context): Global context shared throughout plugin.
	* PluginInfo.cpp: Replace uses of std::err with mageecDbg()

2015-10-21  Edward Jones  <ed.jones@embecosm.com>
	Reintroduce the GCC plugin, for feature extraction and pass gating

	* AUTHORS: Added file.
	* CMakeLists.txt: Likewise.
	* COPYING: Likewise.
	* FeatureExtract.cpp: Likewise.
	* Features.h: Likewise.
	* GCCCallbacks.cpp: Likewise.
	* GCCPlugin.cpp: Likewise.
	* MAGEECPlugin.h: Likewise.
	* PluginInfo.cpp: Likewise.
	* README: Likewise.
